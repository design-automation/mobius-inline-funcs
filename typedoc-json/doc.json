{
	"id": 0,
	"name": "@design-automation/mobius-inline-funcs",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1303,
			"name": "arithmetic",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 1395,
					"name": "arithmeticClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1396,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 355,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1397,
									"name": "new arithmeticClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1398,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1395,
										"name": "arithmeticClass"
									}
								}
							]
						},
						{
							"id": 1399,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 354,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1400,
							"name": "abs",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 359,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1401,
									"name": "abs",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1402,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1433,
							"name": "ceil",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 399,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1434,
									"name": "ceil",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1435,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1406,
							"name": "cube",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 367,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1407,
									"name": "cube",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1408,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1416,
							"name": "exp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 379,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1417,
									"name": "exp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1418,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1436,
							"name": "floor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 403,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1437,
									"name": "floor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1438,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1445,
							"name": "hypot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 415,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1446,
									"name": "hypot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1447,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1451,
							"name": "isApprox",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 423,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1452,
									"name": "isApprox",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1453,
											"name": "n1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1454,
											"name": "n2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1455,
											"name": "t",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1456,
							"name": "isIn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 427,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1457,
									"name": "isIn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1458,
											"name": "v1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1459,
											"name": "v2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1460,
											"name": "v3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1461,
							"name": "isWithin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 431,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1462,
									"name": "isWithin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1463,
											"name": "v1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1464,
											"name": "v2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1465,
											"name": "v3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1419,
							"name": "log",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 383,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1420,
									"name": "log",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1421,
											"name": "base",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1422,
							"name": "log10",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1423,
									"name": "log10",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1424,
											"name": "base",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1448,
							"name": "norm",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 419,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1449,
									"name": "norm",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1450,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1409,
							"name": "pow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 371,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1410,
									"name": "pow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1411,
											"name": "base",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1412,
											"name": "xp",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1442,
							"name": "prod",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 411,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1443,
									"name": "prod",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1444,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1466,
							"name": "remap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 434,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1467,
									"name": "remap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1468,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1469,
											"name": "d1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1470,
											"name": "d2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1425,
							"name": "round",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 391,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1426,
									"name": "round",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1427,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1428,
											"name": "dec_pla",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1429,
							"name": "sigFig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 395,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1430,
									"name": "sigFig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1431,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1432,
											"name": "sig_figs",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1413,
							"name": "sqrt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 375,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1414,
									"name": "sqrt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1415,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1403,
							"name": "square",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 363,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1404,
									"name": "square",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1405,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1439,
							"name": "sum",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/arithmetic.ts",
									"line": 407,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1440,
									"name": "sum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1441,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1396
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1399
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1400,
								1433,
								1406,
								1416,
								1436,
								1445,
								1451,
								1456,
								1461,
								1419,
								1422,
								1448,
								1409,
								1442,
								1466,
								1425,
								1429,
								1413,
								1403,
								1439
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 353,
							"character": 13
						}
					]
				},
				{
					"id": 1304,
					"name": "abs",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 23,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1305,
							"name": "abs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the absolute value of the given number.\n\\n\n```\nabs('-1');     // 1\nabs(-2);       // 2\nabs(null);     // 0\nabs('');       // 0\nabs([]);       // 0\nabs([2]);      // [2]\nabs([1,2]);    // [1,2]\nabs({});       // NaN\nabs('string'); // NaN\nabs();         // NaN\n```",
								"returns": "A number, list of numbers or NaN if invalid.\n"
							},
							"parameters": [
								{
									"id": 1306,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1307,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1347,
					"name": "ceil",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 207,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1348,
							"name": "ceil",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the smallest integer greater than or equal to the given number.\n```\nceil(.95);    // 1\nceil(4);      // 4\nceil(7.004);  // 8\nceil(-0.95);  // -0\nceil(-4);     // -4\nceil(-7.004); // -7\n```",
								"returns": "An integer or list of integers.\n"
							},
							"parameters": [
								{
									"id": 1349,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1350,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1312,
					"name": "cube",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 66,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1313,
							"name": "cube",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the cube of the number.\n\\n\nIf the input is a list, the result will also be a list.\n\\n\n```\ncube([1, 2, 3, 4])   // [1, 8, 27, 64]\ncube(5)              // 125\n```",
								"returns": "A number or a list containing numbers.\n"
							},
							"parameters": [
								{
									"id": 1314,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1315,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or a list containing numbers."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 1325,
					"name": "exp",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 110,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1326,
							"name": "exp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a number representing e raised to the power of x, where e is Euler's number and x is the argument.",
								"returns": "A number or a list of numbers.\n"
							},
							"parameters": [
								{
									"id": 1327,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1328,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1351,
					"name": "floor",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 229,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1352,
							"name": "floor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the largest integer less than or equal to the specified number.\n```\nfloor( 45.95); //  45\nfloor( 45.05); //  45\nfloor(  4   ); //   4\nfloor(-45.05); // -46\nfloor(-45.95); // -46\n```",
								"returns": "An integer or list of integers.\n"
							},
							"parameters": [
								{
									"id": 1353,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1354,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1363,
					"name": "hypot",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 266,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1364,
							"name": "hypot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the hypotenuse of all values in a list.",
								"returns": "A number (The hypotenuse).\n"
							},
							"parameters": [
								{
									"id": 1365,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1366,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list containing numbers."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 1371,
					"name": "isApprox",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 290,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1372,
							"name": "isApprox",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the absolute difference between the two numbers is less than the tolerance, t.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 1373,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1374,
									"name": "n1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first number."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1375,
									"name": "n2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second number."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1376,
									"name": "t",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The tolerance."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1377,
					"name": "isIn",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 303,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1378,
							"name": "isIn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns v1 < v2 < v3 (True/False).",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 1379,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1380,
									"name": "v1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first value."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1381,
									"name": "v2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second value."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1382,
									"name": "v3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The third value."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1383,
					"name": "isWithin",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 317,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1384,
							"name": "isWithin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns v1 <= v2 <= v3 (True/False).",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 1385,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1386,
									"name": "v1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first value."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1387,
									"name": "v2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second value."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1388,
									"name": "v3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The third value."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1329,
					"name": "log",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 125,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1330,
							"name": "log",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the natural logarithm (base e) of the given number. If the number is negative, NaN is returned.",
								"returns": "A number, list of numbers or NaN.\n"
							},
							"parameters": [
								{
									"id": 1331,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1332,
									"name": "base",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1333,
					"name": "log10",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 140,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1334,
							"name": "log10",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the base 10 logarithm (base e) of the given number. If the number is negative, NaN is returned.",
								"returns": "A number, list of numbers or NaN.\n"
							},
							"parameters": [
								{
									"id": 1335,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1336,
									"name": "base",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1367,
					"name": "norm",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 277,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1368,
							"name": "norm",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the norm of a list.",
								"returns": "A number (The norm).\n"
							},
							"parameters": [
								{
									"id": 1369,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1370,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list containing numbers."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 1316,
					"name": "pow",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 80,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1317,
							"name": "pow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a number representing the given base taken to the power of the given exponent.",
								"returns": "A number or a list of numbers.\n"
							},
							"parameters": [
								{
									"id": 1318,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1319,
									"name": "base",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1320,
									"name": "xp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The exponent used to raise the base."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1359,
					"name": "prod",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 255,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1360,
							"name": "prod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the product of all values in a list.",
								"returns": "A number (The total product).\n"
							},
							"parameters": [
								{
									"id": 1361,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1362,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list containing numbers."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 1389,
					"name": "remap",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 341,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1390,
							"name": "remap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Maps a number from the d1 domain to the d2 domain.\n\\n\nThis can be thought of as a percentage.\nThe percentage of num in d1's range is calculated,\nthen used to find the equivalent value for num in d2.\n\\n\n```\nremap(10, [0, 100], [100,200]) // 10 is 10% of 0-100. Hence, 10% of 100-200 is 110.\nremap(40, [20, 80], [0, 30])   // 40 is 33.3% of 20-80. Hence, 33.3% of 0-30 is 10.\n```",
								"returns": "The remapped number.\n"
							},
							"parameters": [
								{
									"id": 1391,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1392,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The number/integer to be remapped."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1393,
									"name": "d1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list of two numbers, representing the first domain."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 1394,
									"name": "d2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list of two numbers, representing the second domain."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1337,
					"name": "round",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 156,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1338,
							"name": "round",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "The value of the given number rounded to the nearest integer.",
								"returns": "An integer or list of integers.\n"
							},
							"parameters": [
								{
									"id": 1339,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1340,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1341,
									"name": "dec_pla",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The number of decimal places."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1342,
					"name": "sigFig",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 180,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1343,
							"name": "sigFig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the value of the given number converted to the specified number of significant figures.",
								"returns": "A number.\n"
							},
							"parameters": [
								{
									"id": 1344,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1345,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1346,
									"name": "sig_figs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The number of significant figures."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1321,
					"name": "sqrt",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 95,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1322,
							"name": "sqrt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the square root of the given number. If the number is negative, NaN is returned.",
								"returns": "A number or a list of numbers.\n"
							},
							"parameters": [
								{
									"id": 1323,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1324,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1308,
					"name": "square",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 47,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1309,
							"name": "square",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the square of the number.\n\\n\nIf the input is a list, the result will also be a list.\n\\n\n```\nsquare([1, 2, 3, 4])    // [1, 4, 9, 16]\nsquare(5)               // 25\n```",
								"returns": "A number or a list containing numbers.\n\n"
							},
							"parameters": [
								{
									"id": 1310,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1311,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or a list containing numbers."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 1355,
					"name": "sum",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/arithmetic.ts",
							"line": 244,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1356,
							"name": "sum",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the sum of all values in a list.",
								"returns": "A number (The sum).\n"
							},
							"parameters": [
								{
									"id": 1357,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1358,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list containing numbers."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1395
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1304,
						1347,
						1312,
						1325,
						1351,
						1363,
						1371,
						1377,
						1383,
						1329,
						1333,
						1367,
						1316,
						1359,
						1389,
						1337,
						1342,
						1321,
						1308,
						1355
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/arithmetic.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1182,
			"name": "colors",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 1200,
					"name": "colorsClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1201,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/colors.ts",
									"line": 137,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1202,
									"name": "new colorsClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1203,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1200,
										"name": "colorsClass"
									}
								}
							]
						},
						{
							"id": 1204,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/colors.ts",
									"line": 136,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1205,
							"name": "colFalse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/colors.ts",
									"line": 141,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1206,
									"name": "colFalse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1207,
											"name": "vals",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1208,
											"name": "min",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1209,
											"name": "max",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TColor"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TColor"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1216,
							"name": "colFromStr",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/colors.ts",
									"line": 149,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1217,
									"name": "colFromStr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1218,
											"name": "col_str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TColor"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TColor"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1210,
							"name": "colScale",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/colors.ts",
									"line": 145,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1211,
									"name": "colScale",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1212,
											"name": "vals",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1213,
											"name": "min",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1214,
											"name": "max",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1215,
											"name": "scale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TColor"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TColor"
												}
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1201
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1204
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1205,
								1216,
								1210
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/colors.ts",
							"line": 135,
							"character": 13
						}
					]
				},
				{
					"id": 1183,
					"name": "colFalse",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/colors.ts",
							"line": 31,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1184,
							"name": "colFalse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a colour from a value in the range between min and max.",
								"text": "Based on a \"false\" color scale,\nwhich is a gradient of colors with the following order:\n1. Red\n2. Orange\n3. Yellow\n4. Green\n5. Cyan\n6. Blue\n\nThe input number is measured as a percentage of the min/max scale,\nthen a color is returned depending on where the percentage lies on the color gradient.\n\n<a href=\"/editor?file=/assets/examples/Inline_Color_False.mob&node=1\" target=\"_blank\">See here for an example model.</a>\n",
								"returns": "A list of three numbers, `[r, g, b]`, in the range 0 to 1.\n"
							},
							"parameters": [
								{
									"id": 1185,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1186,
									"name": "vals",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The input number."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1187,
									"name": "min",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The smallest number of the scale."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1188,
									"name": "max",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The largest number of the scale."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TColor"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TColor"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1196,
					"name": "colFromStr",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/colors.ts",
							"line": 117,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1197,
							"name": "colFromStr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a color from a string representation.",
								"text": "\\n\n\nExamples of color strings are as follows:\n\n- `colFromStr( \"rgb(255, 0, 0)`\" )`\n- `colFromStr( \"rgb(100%, 0%, 0%)`\" )`\n- `colFromStr( \"hsl(0, 100%, 50%)`\" )`\n- `colFromStr( \"#ff0000\" )`\n- `colFromStr( \"#FFAABB\" )`\n- `colFromStr( \"#f00\" )`\n- `colFromStr( \"skyblue\" )`\n- `colFromStr( \"Maroon\" )`\n- `colFromStr( \"MediumSeaGreen\" )`\n\nFor colour names, all 140 names are supported. See <a\nhref=\"https://www.w3schools.com/colors/colors_names.asp\" target=\"_blank\">w3schools</a>.\n\nIf the string cannot be interpreted as a color, then `[1, 1, 1]` is returned (i.e. white).\n\nThe function is overloaded. If you pass in a list of strings, it will return a list of colors.\n",
								"returns": "A list of three numbers, `[r, g, b]`, in the range 0 to 1.\n"
							},
							"parameters": [
								{
									"id": 1198,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1199,
									"name": "col_str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TColor"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TColor"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1189,
					"name": "colScale",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/colors.ts",
							"line": 71,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1190,
							"name": "colScale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a colour from a value in the range between min and max, given a Brewer scale or custom color scale.",
								"text": "The input number is measured as a percentage of the min/max scale, then a color is returned depending on where the percentage lies on the color gradient.\n\nUsing a Brewer scale would be similar to using `visualize.Gradient`, which comes preloaded with those scales.\nSee that function's drop-down menu for a list of valid Brewer scales.\n\nAccepted custom color inputs include:\n- Hex, as a string. <a href=\"https://www.w3schools.com/colors/colors_hexadecimal.asp\" target=\"_blank\">(w3schools hex builder)</a>\n- RGB255, as a list. <a href=\"https://www.w3schools.com/colors/colors_hexadecimal.asp\" target=\"_blank\">(w3schools RGB builder)</a>\n- Colors from X11 with no numbers, as a string. <a href=\"https://www.w3schools.com/colors/colors_x11.asp\" target=\"_blank\">(w3schools X11 list)</a>\n\n<a href=\"/editor?file=/assets/examples/Inline_Color_Scale.mob&node=1\" target=\"_blank\">See here for an example model.</a>\n",
								"returns": "A list of three numbers, `[r, g, b]`, in the range 0 to 1.\n"
							},
							"parameters": [
								{
									"id": 1191,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1192,
									"name": "vals",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The input number."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1193,
									"name": "min",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The smallest number of the scale."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1194,
									"name": "max",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The largest number of the scale."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1195,
									"name": "scale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A string representing a Brewer scale, or a list of strings representing a custom colour scale/gradient.\nThe order of colors in the gradient will follow the order of the list from left to right."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TColor"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TColor"
										}
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1200
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1183,
						1196,
						1189
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/colors.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1041,
			"name": "common",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 1055,
					"name": "commonClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1056,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/common.ts",
									"line": 52,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1057,
									"name": "new commonClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1058,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1055,
										"name": "commonClass"
									}
								}
							]
						},
						{
							"id": 1059,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/common.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1063,
							"name": "copy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/common.ts",
									"line": 60,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1064,
									"name": "copy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1065,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1066,
							"name": "equal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/common.ts",
									"line": 64,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1067,
									"name": "equal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1068,
											"name": "data1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1069,
											"name": "data2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1060,
							"name": "len",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/common.ts",
									"line": 56,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1061,
									"name": "len",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1062,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1056
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1059
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1063,
								1066,
								1060
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/common.ts",
							"line": 50,
							"character": 13
						}
					]
				},
				{
					"id": 1046,
					"name": "copy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/common.ts",
							"line": 27,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1047,
							"name": "copy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Makes a deep copy of a list or a dictionary.",
								"returns": "The deep copy.\n"
							},
							"parameters": [
								{
									"id": 1048,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1049,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list or dictionary."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 1050,
					"name": "equal",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/common.ts",
							"line": 40,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1051,
							"name": "equal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true of the two lists or dictionaries are equal.\nPerforms a deep comparison between values to determine if they are equivalent.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 1052,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1053,
									"name": "data1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1054,
									"name": "data2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1042,
					"name": "len",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/common.ts",
							"line": 15,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1043,
							"name": "len",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of items in a list, a dictionary, or a string.",
								"returns": "An integer.\n"
							},
							"parameters": [
								{
									"id": 1044,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1045,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The list, dictionary, or string."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1055
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1046,
						1050,
						1042
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/common.ts",
					"line": 5,
					"character": 0
				}
			]
		},
		{
			"id": 1282,
			"name": "constants",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 1283,
					"name": "PI",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "The mathematical constant PI, `3.141...`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 6,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "Math.PI"
				},
				{
					"id": 1294,
					"name": "RX",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "A ray with an origin `[0, 0, 0]` and a direction `[1, 0, 0]`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 57,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "TRay"
					},
					"defaultValue": "XRAY"
				},
				{
					"id": 1295,
					"name": "RY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "A ray with an origin `[0, 0, 0]` and a direction `[0, 1, 0]`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 61,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "TRay"
					},
					"defaultValue": "YRAY"
				},
				{
					"id": 1296,
					"name": "RZ",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "A ray with an origin `[0, 0, 0]` and a direction `[0, 0, 1]`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 65,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "TRay"
					},
					"defaultValue": "ZRAY"
				},
				{
					"id": 1293,
					"name": "VO",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "An origin `[0,0,0]`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 53,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "Txyz"
					},
					"defaultValue": "OVEC"
				},
				{
					"id": 1290,
					"name": "VX",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "A vector `[1,0,0]`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 41,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "Txyz"
					},
					"defaultValue": "XVEC"
				},
				{
					"id": 1291,
					"name": "VY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "A vector `[0,1,0]`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 45,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "Txyz"
					},
					"defaultValue": "YVEC"
				},
				{
					"id": 1292,
					"name": "VZ",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "A vector `[0,0,1]`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 49,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "Txyz"
					},
					"defaultValue": "ZVEC"
				},
				{
					"id": 1284,
					"name": "XY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "A plane at the origin, aligned with the XY plane, i.e. `[[0, 0, 0],[1, 0, 0],[0, 1, 0]]`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 11,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "TPlane"
					},
					"defaultValue": "XYPLANE"
				},
				{
					"id": 1289,
					"name": "XZ",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "A plane at the origin, aligned with the XZ plane, i.e. `[[0, 0, 0],[1, 0, 0],[0, 0, 1]]`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 36,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "TPlane"
					},
					"defaultValue": "XZPLANE"
				},
				{
					"id": 1287,
					"name": "YX",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "A plane at the origin, aligned with the YX plane, i.e. `[[0, 0, 0],[0, 1, 0],[1, 0, 0]]`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 26,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "TPlane"
					},
					"defaultValue": "YXPLANE"
				},
				{
					"id": 1285,
					"name": "YZ",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "A plane at the origin, aligned with the YZ plane, i.e. `[[0, 0, 0],[0, 1, 0],[0, 0, 1]]`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 16,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "TPlane"
					},
					"defaultValue": "YZPLANE"
				},
				{
					"id": 1286,
					"name": "ZX",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "A plane at the origin, aligned with the ZX plane, i.e. `[[0, 0, 0],[0, 0, 1],[1, 0, 0]]`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 21,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "TPlane"
					},
					"defaultValue": "ZXPLANE"
				},
				{
					"id": 1288,
					"name": "ZY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "A plane at the origin, aligned with the ZY plane, i.e. `[[0, 0, 0],[0, 0, 1],[0, 1, 0]]`."
					},
					"sources": [
						{
							"fileName": "inline/constants.ts",
							"line": 31,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"name": "TPlane"
					},
					"defaultValue": "ZYPLANE"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1283,
						1294,
						1295,
						1296,
						1293,
						1290,
						1291,
						1292,
						1284,
						1289,
						1287,
						1285,
						1286,
						1288
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/constants.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1219,
			"name": "conversion",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 1252,
					"name": "conversionClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1253,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/conversion.ts",
									"line": 144,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1254,
									"name": "new conversionClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1255,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1252,
										"name": "conversionClass"
									}
								}
							]
						},
						{
							"id": 1256,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/conversion.ts",
									"line": 143,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1257,
							"name": "boolean",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/conversion.ts",
									"line": 148,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1258,
									"name": "boolean",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1259,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1269,
							"name": "degToRad",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/conversion.ts",
									"line": 164,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1270,
									"name": "degToRad",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1271,
											"name": "deg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1277,
							"name": "numToCurr",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/conversion.ts",
									"line": 172,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1278,
									"name": "numToCurr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1279,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1280,
											"name": "currency",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1281,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1272,
							"name": "numToStr",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/conversion.ts",
									"line": 168,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1273,
									"name": "numToStr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1274,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1275,
											"name": "frac_digits",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1276,
											"name": "locale",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1260,
							"name": "number",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/conversion.ts",
									"line": 152,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1261,
									"name": "number",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1262,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1266,
							"name": "radToDeg",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/conversion.ts",
									"line": 160,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1267,
									"name": "radToDeg",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1268,
											"name": "rad",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1263,
							"name": "string",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/conversion.ts",
									"line": 156,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1264,
									"name": "string",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1265,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1253
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1256
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1257,
								1269,
								1277,
								1272,
								1260,
								1266,
								1263
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/conversion.ts",
							"line": 142,
							"character": 13
						}
					]
				},
				{
					"id": 1220,
					"name": "boolean",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/conversion.ts",
							"line": 13,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1221,
							"name": "boolean",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a boolean or convert a string or number to a boolean.\n\\n\nIn case of a number, true is returned for non-zero numbers, and false in case of zero.\nStrings can be 'true' or 'false', or can contain a number.\nWhen value is a matrix, all elements will be converted to boolean.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 1222,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1223,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A value of any type."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 1236,
					"name": "degToRad",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/conversion.ts",
							"line": 69,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1237,
							"name": "degToRad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts degrees to radians.\n```\nradToDeg(PI)         // 180\nradToDeg(PI / 2)     // 90\n```",
								"returns": "A number (representing radians).\n"
							},
							"parameters": [
								{
									"id": 1238,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1239,
									"name": "deg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number (representing degrees)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1246,
					"name": "numToCurr",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/conversion.ts",
							"line": 123,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1247,
							"name": "numToCurr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts the number to a string representing currency, with numbers formatted based on locale.\n```\nnumToCurr(232.4, \"Usd\", \"en-AU\")       // USD 234.40\nnumToCurr(1000000000, \"sgd\", \"en-GB\")  // SGD 1,000,000,000.00\nnumToCurr(10, \"EUR\")                   // €10.00\n```\nSee <a href=\"https://www.w3schools.com/jsref/jsref_tolocalestring_number.asp\" target=\"_blank\">\nw3schools' full list of locales.</a>",
								"returns": "A string.\n"
							},
							"parameters": [
								{
									"id": 1248,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1249,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number (with decimals) or an integer."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1250,
									"name": "currency",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A string of 3 letters to indicate the desired currency. The letters will be converted to uppercase."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1251,
									"name": "locale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) A locale in the form of a string."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1240,
					"name": "numToStr",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/conversion.ts",
							"line": 91,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1241,
							"name": "numToStr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts the number to a string, with commas, e.g. 1,234,567",
								"text": "If frac_digits is set: Converts the number to a string, with commas, where \"d\" specifies the\nnumber of fraction digits, e.g. 1,234.00.\nIf locale is set: Converts the number to a string, where \"d\" specifies the number of fraction\ndigits, and \"l\" specifies the locale, e.g. \"en-GB\", \"fi-FI\", \"in-IN\", \"pt-BR\", etc.\nSee <a href=\"https://www.w3schools.com/jsref/jsref_tolocalestring_number.asp\" target=\"_blank\">\nw3schools' full list of locales.</a>\n",
								"returns": "A string.\n"
							},
							"parameters": [
								{
									"id": 1242,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1243,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number (with decimals) or an integer."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								},
								{
									"id": 1244,
									"name": "frac_digits",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) An integer specifying the number of fraction digits."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1245,
									"name": "locale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) A locale in the form of a string."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1224,
					"name": "number",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/conversion.ts",
							"line": 25,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1225,
							"name": "number",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a number or convert a string, boolean, or unit to a number.\nWhen value is a matrix, all elements will be converted to numbers.",
								"returns": "A number/numbers.\n"
							},
							"parameters": [
								{
									"id": 1226,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1227,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A value of any type."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 1232,
					"name": "radToDeg",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/conversion.ts",
							"line": 53,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1233,
							"name": "radToDeg",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts radians to degrees.\n```\ndegToRad(45)   // 0.7853981633974483 (PI/4)\ndegToRad(180)  // 3.141592653589793 (PI)\n```",
								"returns": "A number (representing degrees).\n"
							},
							"parameters": [
								{
									"id": 1234,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1235,
									"name": "rad",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number (representing radians)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1228,
					"name": "string",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/conversion.ts",
							"line": 37,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1229,
							"name": "string",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a string or convert any object into a string.\nElements of Arrays and Matrices are processed element wise.",
								"returns": "A string/strings.\n"
							},
							"parameters": [
								{
									"id": 1230,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1231,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A value of any type."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1252
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1220,
						1236,
						1246,
						1240,
						1224,
						1232,
						1228
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/conversion.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1070,
			"name": "dict",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 1108,
					"name": "dictClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1109,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/dict.ts",
									"line": 148,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1110,
									"name": "new dictClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1111,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1108,
										"name": "dictClass"
									}
								}
							]
						},
						{
							"id": 1112,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/dict.ts",
									"line": 147,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1135,
							"name": "dictCopy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/dict.ts",
									"line": 176,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1136,
									"name": "dictCopy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1137,
											"name": "dict",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							]
						},
						{
							"id": 1138,
							"name": "dictEq",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/dict.ts",
									"line": 180,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1139,
									"name": "dictEq",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1140,
											"name": "dict1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1141,
											"name": "dict2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1131,
							"name": "dictFind",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/dict.ts",
									"line": 172,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1132,
									"name": "dictFind",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1133,
											"name": "dict",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1134,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 1113,
							"name": "dictGet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/dict.ts",
									"line": 152,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1114,
									"name": "dictGet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1115,
											"name": "dict",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1116,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1123,
							"name": "dictHasKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/dict.ts",
									"line": 164,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1124,
									"name": "dictHasKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1125,
											"name": "dict",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1126,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "boolean"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 1127,
							"name": "dictHasVal",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/dict.ts",
									"line": 168,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1128,
									"name": "dictHasVal",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1129,
											"name": "dict",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1130,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1117,
							"name": "dictKeys",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/dict.ts",
									"line": 156,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1118,
									"name": "dictKeys",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1119,
											"name": "dict",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 1120,
							"name": "dictVals",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/dict.ts",
									"line": 160,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1121,
									"name": "dictVals",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1122,
											"name": "dict",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1109
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1112
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1135,
								1138,
								1131,
								1113,
								1123,
								1127,
								1117,
								1120
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/dict.ts",
							"line": 146,
							"character": 13
						}
					]
				},
				{
					"id": 1099,
					"name": "dictCopy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/dict.ts",
							"line": 120,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1100,
							"name": "dictCopy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a deep copy of the dictionary.\n\\n\nA deep copy means that changing values in the copied dictionary will not affect the original dictionary.",
								"returns": "The copied dictionary.\n"
							},
							"parameters": [
								{
									"id": 1101,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1102,
									"name": "dict",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The dictionary."
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					]
				},
				{
					"id": 1103,
					"name": "dictEq",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/dict.ts",
							"line": 136,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1104,
							"name": "dictEq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the values in the two dictionaries are equal.",
								"text": "Performs a deep comparison between values to determine if they are equivalent.\n",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 1105,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1106,
									"name": "dict1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first dictionary."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 1107,
									"name": "dict2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second dictionary."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1094,
					"name": "dictFind",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/dict.ts",
							"line": 102,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1095,
							"name": "dictFind",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the first key in the dictionary that has the given value.",
								"text": "If the value does not exist, returns null.\n",
								"returns": "The first key, or null.\n"
							},
							"parameters": [
								{
									"id": 1096,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1097,
									"name": "dict",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The dictionary."
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 1098,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value, can be any type."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1071,
					"name": "dictGet",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/dict.ts",
							"line": 19,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1072,
							"name": "dictGet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the item in the dictionary specified by key.\nIf the key does not exist, undefined is returned.",
								"text": "If a list of keys is provided, then a list of values will be returned.\n",
								"returns": "The value (or list of values) associated with the given key.\n"
							},
							"parameters": [
								{
									"id": 1073,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1074,
									"name": "dict",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The dictionary."
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 1075,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The key, either a single string or a list of strings."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1084,
					"name": "dictHasKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/dict.ts",
							"line": 70,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1085,
							"name": "dictHasKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the dictionary contains the given key, false otherwsie.",
								"text": "If a list of keys is given, a list of true/false values will be returned.\n",
								"returns": "True or False, or a list of True/False values.\n"
							},
							"parameters": [
								{
									"id": 1086,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1087,
									"name": "dict",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The dictionary."
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 1088,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The key, either a string or a list of strings."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 1089,
					"name": "dictHasVal",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/dict.ts",
							"line": 86,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1090,
							"name": "dictHasVal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the dictionary contains the given value, false otherwsie.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 1091,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1092,
									"name": "dict",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The dictionary."
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 1093,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value to seach for, can be any type."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1076,
					"name": "dictKeys",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/dict.ts",
							"line": 38,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1077,
							"name": "dictKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array of all the keys in a dictionary.",
								"text": "- dict1 = {\"key1\": 1, \"key2\": 2}\n- dictKeys(dict1)        \\\\ [\"key1\", \"key2\"]\n",
								"returns": "A list.\n"
							},
							"parameters": [
								{
									"id": 1078,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1079,
									"name": "dict",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The dictionary."
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 1080,
					"name": "dictVals",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/dict.ts",
							"line": 54,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1081,
							"name": "dictVals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array of all the values in a dictionary.",
								"text": "- dict1 = {\"key1\": 1, \"key2\": 2}\n- dictVals(dict1)        \\\\ [1, 2]\n",
								"returns": "A list.\n"
							},
							"parameters": [
								{
									"id": 1082,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1083,
									"name": "dict",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The dictionary."
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1108
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1099,
						1103,
						1094,
						1071,
						1084,
						1089,
						1076,
						1080
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/dict.ts",
					"line": 4,
					"character": 0
				}
			]
		},
		{
			"id": 836,
			"name": "geometry",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 864,
					"name": "geometryClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 865,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/geometry.ts",
									"line": 103,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 866,
									"name": "new geometryClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 867,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 864,
										"name": "geometryClass"
									}
								}
							]
						},
						{
							"id": 868,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/geometry.ts",
									"line": 102,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 879,
							"name": "distance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/geometry.ts",
									"line": 115,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 880,
									"name": "distance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 881,
											"name": "c1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 882,
											"name": "c2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 883,
							"name": "distanceM",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/geometry.ts",
									"line": 119,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 884,
									"name": "distanceM",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 885,
											"name": "c1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 886,
											"name": "c2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 887,
							"name": "distanceMS",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/geometry.ts",
									"line": 123,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 888,
									"name": "distanceMS",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 889,
											"name": "c1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 890,
											"name": "c2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 869,
							"name": "intersect",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/geometry.ts",
									"line": 107,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 870,
									"name": "intersect",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 871,
											"name": "r1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 872,
											"name": "r2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 873,
											"name": "met",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Txyz"
									}
								}
							]
						},
						{
							"id": 874,
							"name": "project",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/geometry.ts",
									"line": 111,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 875,
									"name": "project",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 876,
											"name": "c",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 877,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 878,
											"name": "met",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Txyz"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								865
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								868
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								879,
								883,
								887,
								869,
								874
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/geometry.ts",
							"line": 101,
							"character": 13
						}
					]
				},
				{
					"id": 849,
					"name": "distance",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/geometry.ts",
							"line": 58,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 850,
							"name": "distance",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the Euclidean distance between two xyzs, c1 and c2'\nReturns the Euclidean distance between an xyz c and an infinite ray r'\nReturns the Euclidean distance between an xyz c and an infinite plane p'",
								"returns": "A number, the distance.\n"
							},
							"parameters": [
								{
									"id": 851,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 852,
									"name": "c1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first point/position."
									},
									"type": {
										"type": "reference",
										"name": "Txyz"
									}
								},
								{
									"id": 853,
									"name": "c2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second point/position."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "reference",
												"name": "Txyz"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 854,
					"name": "distanceM",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/geometry.ts",
							"line": 75,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 855,
							"name": "distanceM",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the Manhattan distance between two xyzs, c1 and c2\nReturns the Manhattan distance between an xyz c and an infinite ray r'\nReturns the Manhattan distance between an xyz c and an infinite plane p'",
								"text": "<a href=\"https://www.omnicalculator.com/math/manhattan-distance#what-is-the-manhattan-distance\" target=\"_blank\"> See here for an explanation on the Manhattan distance. </a>\n",
								"returns": "A number. The Manhattan distance between the points.\n"
							},
							"parameters": [
								{
									"id": 856,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 857,
									"name": "c1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first point/position."
									},
									"type": {
										"type": "reference",
										"name": "Txyz"
									}
								},
								{
									"id": 858,
									"name": "c2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second point/position."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "reference",
												"name": "Txyz"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 859,
					"name": "distanceMS",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/geometry.ts",
							"line": 92,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 860,
							"name": "distanceMS",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the Manhattan squared distance between two xyzs, c1 and c2\nReturns the Manhattan squared distance between an xyz c and an infinite ray r'\nReturns the Manhattan squared distance between an xyz c and an infinite plane p'",
								"text": "<a href=\"https://www.omnicalculator.com/math/manhattan-distance#what-is-the-manhattan-distance\" target=\"_blank\"> See here for an explanation on the Manhattan distance. </a>\n",
								"returns": "A number. The Manhattan squared distance between the points.\n"
							},
							"parameters": [
								{
									"id": 861,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 862,
									"name": "c1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first point/position."
									},
									"type": {
										"type": "reference",
										"name": "Txyz"
									}
								},
								{
									"id": 863,
									"name": "c2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second point/position."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "reference",
												"name": "Txyz"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 837,
					"name": "intersect",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/geometry.ts",
							"line": 25,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 838,
							"name": "intersect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the intersection xyz between two rays, where...\n['intersect(r1, r2)', 'Returns the intersection xyz between two infinite rays'],\n['intersect(r1, r2, m)', 'Returns the intersection xyz between two rays, where '\n'if m=2, rays are infinite in both directions, ' +\n'if m=1 rays are infinite in one direction, ' +\n'and if m=0, rays are not infinite.'],\n['intersect(r, p)', 'Returns the intersection xyz between an infinite ray r and an infinite plane p'],\n['intersect(r, p, m)', 'Returns the intersection xyz between a ray r and an infinite plane p, where ' +\n'if m=2, the ray is infinite in both directions, ' +\n'if m=1 the ray is infinite in one direction, ' +\n'and if m=0, the ray is not infinite.'],",
								"returns": "The intersection, xyz (a list that represents a point/position) between two ways.\n"
							},
							"parameters": [
								{
									"id": 839,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 840,
									"name": "r1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first ray."
									},
									"type": {
										"type": "reference",
										"name": "TRay"
									}
								},
								{
									"id": 841,
									"name": "r2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second ray."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "reference",
												"name": "TPlane"
											}
										]
									}
								},
								{
									"id": 842,
									"name": "met",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "(Optional) Creates certain conditions, as seen above."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								}
							],
							"type": {
								"type": "reference",
								"name": "Txyz"
							}
						}
					]
				},
				{
					"id": 843,
					"name": "project",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/geometry.ts",
							"line": 44,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 844,
							"name": "project",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the xyz from projecting an xyz c onto an infinite ray r...\n['project(c, r)', 'Returns the xyz from projecting an xyz c onto an infinite ray r'],\n['project(c, r, m)', 'Returns the xyz from projecting an xyz c onto an infinite ray r, where ' +\n'if m=2, the ray is infinite in both directions, ' +\n'if m=1 the ray is infinite in one direction, ' +\n'and if m=0, the ray is not infinite.'],\n['project(c, p)', 'Returns the xyz from projecting an xyz c onto an infinite plane p']",
								"returns": "A list of 3 numbers, representing the xyz point.\n"
							},
							"parameters": [
								{
									"id": 845,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 846,
									"name": "c",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A point/position."
									},
									"type": {
										"type": "reference",
										"name": "Txyz"
									}
								},
								{
									"id": 847,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A ray."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "reference",
												"name": "TPlane"
											}
										]
									}
								},
								{
									"id": 848,
									"name": "met",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "(Optional) Creates certain conditions, as seen above."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								}
							],
							"type": {
								"type": "reference",
								"name": "Txyz"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						864
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						849,
						854,
						859,
						837,
						843
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/geometry.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 891,
			"name": "list",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 972,
					"name": "listClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 973,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 361,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 974,
									"name": "new listClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 975,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 972,
										"name": "listClass"
									}
								}
							]
						},
						{
							"id": 976,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 360,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 986,
							"name": "listCopy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 373,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 987,
									"name": "listCopy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 988,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 982,
							"name": "listCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 369,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 983,
									"name": "listCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 984,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 985,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 1025,
							"name": "listCull",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 413,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1026,
									"name": "listCull",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1027,
											"name": "list1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1028,
											"name": "list2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 1037,
							"name": "listEq",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 425,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1038,
									"name": "listEq",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1039,
											"name": "list1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1040,
											"name": "list2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 997,
							"name": "listFind",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 385,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 998,
									"name": "listFind",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 999,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1000,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 1009,
							"name": "listFlat",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 397,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1010,
									"name": "listFlat",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1011,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1012,
											"name": "depth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 993,
							"name": "listGet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 381,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 994,
									"name": "listGet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 995,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 996,
											"name": "idx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 1001,
							"name": "listHas",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 389,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1002,
									"name": "listHas",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1003,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1004,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 1005,
							"name": "listJoin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 393,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1006,
									"name": "listJoin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1007,
											"name": "list1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1008,
											"name": "list2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 989,
							"name": "listRep",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 377,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 990,
									"name": "listRep",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 991,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 992,
											"name": "n",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 1022,
							"name": "listRev",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 409,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1023,
									"name": "listRev",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1024,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 1013,
							"name": "listRot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 401,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1014,
									"name": "listRot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1015,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1016,
											"name": "rot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 1017,
							"name": "listSlice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 405,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1018,
									"name": "listSlice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1019,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1020,
											"name": "start",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1021,
											"name": "end",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 1029,
							"name": "listSort",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 417,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1030,
									"name": "listSort",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1031,
											"name": "list1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1032,
											"name": "list2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 1033,
							"name": "listZip",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 421,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1034,
									"name": "listZip",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1035,
											"name": "list1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1036,
											"name": "list2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 977,
							"name": "range",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/list.ts",
									"line": 365,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 978,
									"name": "range",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 979,
											"name": "start",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 980,
											"name": "end",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 981,
											"name": "step",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								973
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								976
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								986,
								982,
								1025,
								1037,
								997,
								1009,
								993,
								1001,
								1005,
								989,
								1022,
								1013,
								1017,
								1029,
								1033,
								977
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 359,
							"character": 13
						}
					]
				},
				{
					"id": 903,
					"name": "listCopy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 75,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 904,
							"name": "listCopy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a shallow copy of the list.\n\\n\nA shallow copy means that changing primitive entities (e.g. numbers, strings) in the\ncopied list will not affect the original list.",
								"returns": "The copy of the list.\n"
							},
							"parameters": [
								{
									"id": 905,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 906,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				},
				{
					"id": 898,
					"name": "listCount",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 53,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 899,
							"name": "listCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the number of times the value is in the list.",
								"returns": "An integer.\n"
							},
							"parameters": [
								{
									"id": 900,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 901,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 902,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value, can be any type."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 952,
					"name": "listCull",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 267,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 953,
							"name": "listCull",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new list of all the values that evaluate to true.",
								"text": "If the second argument is provided, then it\nreturns a new list of all the values in list1 that evaluate to true in list2.\n",
								"returns": "A new list.\n"
							},
							"parameters": [
								{
									"id": 954,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 955,
									"name": "list1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 956,
									"name": "list2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) A list of values, to be used to cull the first list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				},
				{
					"id": 967,
					"name": "listEq",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 349,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 968,
							"name": "listEq",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the values in the two lists are equal.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 969,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 970,
									"name": "list1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 971,
									"name": "list2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 917,
					"name": "listFind",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 129,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 918,
							"name": "listFind",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the index of the first occurence of the value in the list.",
								"text": "If the value does not exist, returns null.\n",
								"returns": "The index of the first occurence of the value, or null.\n"
							},
							"parameters": [
								{
									"id": 919,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 920,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 921,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value, can be of any type."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 932,
					"name": "listFlat",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 195,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 933,
							"name": "listFlat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a flattened copy of the list. If the input list has lists nested within it, the values of\nthe nested lists will be unnested.",
								"text": "If no depth is specified, then it is flattened by the maximum amount.\n```\nlistFlat([1,2,3,[4,[5],6],7])           // [1, 2, 3, 4, 5, 6, 7]\nlistFlat([1,2,3,[4,[5, [6] ], 7] ], 1)  // [1,2,3,4, [5, [6]], 7]\n```",
								"returns": "The flattened list.\n"
							},
							"parameters": [
								{
									"id": 934,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 935,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 936,
									"name": "depth",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) The depth to flatten to, an integer."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				},
				{
					"id": 912,
					"name": "listGet",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 110,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 913,
							"name": "listGet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the item in the list specified by index, either a positive or negative integer.",
								"returns": "The specified item.\n"
							},
							"parameters": [
								{
									"id": 914,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 915,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 916,
									"name": "idx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The index, an integer or a list of integers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 922,
					"name": "listHas",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 147,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 923,
							"name": "listHas",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the list contains the value, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 924,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 925,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 926,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The value, can be any type."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 927,
					"name": "listJoin",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 165,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 928,
							"name": "listJoin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Joins two or more lists into a single list.",
								"text": "If the arguments are not lists, then they will be converted into lists.\n\nThis functions accepts any number of arguments.\n",
								"returns": "The combined list.\n"
							},
							"parameters": [
								{
									"id": 929,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 930,
									"name": "list1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 931,
									"name": "list2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second list. (More lists can be added as additional arguments.)"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				},
				{
					"id": 907,
					"name": "listRep",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 89,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 908,
							"name": "listRep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new list that repeats the contents of the input list n times.",
								"returns": "A new list.\n"
							},
							"parameters": [
								{
									"id": 909,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 910,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The list."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 911,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The number of repetitons."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				},
				{
					"id": 948,
					"name": "listRev",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 250,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 949,
							"name": "listRev",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new list, with the items in reverse order.",
								"returns": "A new list.\n"
							},
							"parameters": [
								{
									"id": 950,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 951,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				},
				{
					"id": 937,
					"name": "listRot",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 215,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 938,
							"name": "listRot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a list that is rotated, i.e. items from the end of the list are moved to the start of the list.\nFor a positive rotation, items are moved from the end to the start of the list.\nFor a negative rotation, items are moved from the start to the end of the list.",
								"returns": "The rotated list.\n"
							},
							"parameters": [
								{
									"id": 939,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 940,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 941,
									"name": "rot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The number of items to rotate, an integer."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				},
				{
					"id": 942,
					"name": "listSlice",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 235,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 943,
							"name": "listSlice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return a sub-list from the list.",
								"returns": "The sub-list.\n"
							},
							"parameters": [
								{
									"id": 944,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 945,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 946,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The start index of the slice operation, an integer."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 947,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) The end index of the slice operation, an integer. Defaults to the length of the list."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				},
				{
					"id": 957,
					"name": "listSort",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 295,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 958,
							"name": "listSort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new list, with the items in sorted order.",
								"text": "If no second argument is provided, then the list is sorted in ascending order.\n\nIf a second argument is provided, then it should be a list of the same length as the first argument.\nIn this case, the first list is sorted according to ascending order of the values in the second list.\n",
								"returns": "A new list.\n"
							},
							"parameters": [
								{
									"id": 959,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 960,
									"name": "list1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 961,
									"name": "list2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				},
				{
					"id": 962,
					"name": "listZip",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 326,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 963,
							"name": "listZip",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts a set of lists from rows into columns.",
								"text": "If no second argument is provided, it assumes the first argument consists of a list of lists.\n\nIf a second argument is provided, then it should be a list of the same length as the first argument.\nIn this case, the items in the first and second lists are reaarranged to generate a new set of lists.\n\nThis function also accepts additional lists of arguments.\n",
								"returns": "A new list.\n"
							},
							"parameters": [
								{
									"id": 964,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 965,
									"name": "list1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first row list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 966,
									"name": "list2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) The second row list, which must have the same length as the first."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				},
				{
					"id": 892,
					"name": "range",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/list.ts",
							"line": 22,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 893,
							"name": "range",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a list of integers, from start to end, with a step size of 1.\nIf `step` has been set: Generates a list of integers, from start to end, with a specified step size.\n```\nrange(1, 6)        // [1, 2, 3, 4, 5]\n```",
								"returns": "A list.\n"
							},
							"parameters": [
								{
									"id": 894,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 895,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The start of the range, inclusive."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 896,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) The end of the range, exclusive."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 897,
									"name": "step",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) The step size."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						972
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						903,
						898,
						952,
						967,
						917,
						932,
						912,
						922,
						927,
						907,
						948,
						937,
						942,
						957,
						962,
						892
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/list.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 749,
			"name": "plane",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 795,
					"name": "planeClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 796,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/plane.ts",
									"line": 359,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 797,
									"name": "new planeClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 798,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 795,
										"name": "planeClass"
									}
								}
							]
						},
						{
							"id": 799,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/plane.ts",
									"line": 358,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 805,
							"name": "plnCopy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/plane.ts",
									"line": 367,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 806,
									"name": "plnCopy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 807,
											"name": "pln",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 833,
							"name": "plnFromRay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/plane.ts",
									"line": 395,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 834,
									"name": "plnFromRay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 835,
											"name": "ray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 817,
							"name": "plnLMove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/plane.ts",
									"line": 379,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 818,
									"name": "plnLMove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 819,
											"name": "pln",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 820,
											"name": "vec",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 821,
							"name": "plnLRotX",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/plane.ts",
									"line": 383,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 822,
									"name": "plnLRotX",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 823,
											"name": "pln",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 824,
											"name": "ang",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 825,
							"name": "plnLRotY",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/plane.ts",
									"line": 387,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 826,
									"name": "plnLRotY",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 827,
											"name": "pln",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 828,
											"name": "ang",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 829,
							"name": "plnLRotZ",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/plane.ts",
									"line": 391,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 830,
									"name": "plnLRotZ",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 831,
											"name": "pln",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 832,
											"name": "ang",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 800,
							"name": "plnMake",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/plane.ts",
									"line": 363,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 801,
									"name": "plnMake",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 802,
											"name": "origin",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 803,
											"name": "x_vec",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 804,
											"name": "xy_vec",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 808,
							"name": "plnMove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/plane.ts",
									"line": 371,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 809,
									"name": "plnMove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 810,
											"name": "pln",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 811,
											"name": "vec",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 812,
							"name": "plnRot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/plane.ts",
									"line": 375,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 813,
									"name": "plnRot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 814,
											"name": "pln",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 815,
											"name": "ray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 816,
											"name": "ang",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								796
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								799
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								805,
								833,
								817,
								821,
								825,
								829,
								800,
								808,
								812
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/plane.ts",
							"line": 357,
							"character": 13
						}
					]
				},
				{
					"id": 756,
					"name": "plnCopy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/plane.ts",
							"line": 74,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 757,
							"name": "plnCopy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Make a copy of the plane \"p\".",
								"text": "Can be overloaded.\n",
								"returns": "The copied plane.\n"
							},
							"parameters": [
								{
									"id": 758,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 759,
									"name": "pln",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The plane to be copied."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TPlane"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TPlane"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 791,
					"name": "plnFromRay",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/plane.ts",
							"line": 338,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 792,
							"name": "plnFromRay",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generate a plane from a ray. The plane is perpendicular to the ray,\nand the origin of the plane will be the same as the ray.",
								"text": "Can be overloaded.\n",
								"returns": "A plane or list of planes.\n"
							},
							"parameters": [
								{
									"id": 793,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 794,
									"name": "ray",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Input ray (or list of rays) to generate a plane (or list of planes) from."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TPlane"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TPlane"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 771,
					"name": "plnLMove",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/plane.ts",
							"line": 174,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 772,
							"name": "plnLMove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Move the plane \"p\" relative to the local X, Y, and Z axes, by vector \"v\".",
								"text": "Can be overloaded.\n",
								"returns": "The new, moved plane.\n"
							},
							"parameters": [
								{
									"id": 773,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 774,
									"name": "pln",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The plane to be moved."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								},
								{
									"id": 775,
									"name": "vec",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The vector to move the plane by."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TPlane"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TPlane"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 776,
					"name": "plnLRotX",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/plane.ts",
							"line": 215,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 777,
							"name": "plnLRotX",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Rotate the plane \"p\" around the local X axis, by angle \"a\" (in radians).",
								"text": "Can be overloaded.\n",
								"returns": "The new, rotated plane.\n"
							},
							"parameters": [
								{
									"id": 778,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 779,
									"name": "pln",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Plane to be rotated (around the X axis)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								},
								{
									"id": 780,
									"name": "ang",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Angle to rotate plane by, in radians."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TPlane"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TPlane"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 781,
					"name": "plnLRotY",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/plane.ts",
							"line": 256,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 782,
							"name": "plnLRotY",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Rotate the plane \"p\" around the local Y axis, by angle \"a\" (in radians).",
								"text": "Can be overloaded.\n",
								"returns": "The new, rotated plane.\n\n"
							},
							"parameters": [
								{
									"id": 783,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 784,
									"name": "pln",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Plane to be rotated (around the Y axis)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								},
								{
									"id": 785,
									"name": "ang",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Angle to rotate plane by, in radians."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TPlane"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TPlane"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 786,
					"name": "plnLRotZ",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/plane.ts",
							"line": 296,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 787,
							"name": "plnLRotZ",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Rotate the plane \"p\" around the local Z axis, by angle \"a\" (in radians).",
								"text": "Can be overloaded.\n",
								"returns": "The new, rotated plane.\n"
							},
							"parameters": [
								{
									"id": 788,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 789,
									"name": "pln",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Plane to be rotated (around the Z axis)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								},
								{
									"id": 790,
									"name": "ang",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Angle to rotate plane by, in radians."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TPlane"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TPlane"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 750,
					"name": "plnMake",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/plane.ts",
							"line": 25,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 751,
							"name": "plnMake",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a plane from an origin \"o\", an \"x\" axis vector, and any other vector in the \"xy\" plane.",
								"text": "Can be overloaded.\n",
								"returns": "A plane.\n"
							},
							"parameters": [
								{
									"id": 752,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 753,
									"name": "origin",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A point/position or list of points/positions."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 754,
									"name": "x_vec",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A vector or a list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 755,
									"name": "xy_vec",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Another vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TPlane"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TPlane"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 760,
					"name": "plnMove",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/plane.ts",
							"line": 94,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 761,
							"name": "plnMove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Move the plane \"p\" relative to the global X, Y, and Z axes, by vector \"v\".",
								"text": "Can be overloaded.\n",
								"returns": "A new plane that has been moved.\n"
							},
							"parameters": [
								{
									"id": 762,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 763,
									"name": "pln",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The plane to be moved."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								},
								{
									"id": 764,
									"name": "vec",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The vector to move the plane by."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TPlane"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TPlane"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 765,
					"name": "plnRot",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/plane.ts",
							"line": 131,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 766,
							"name": "plnRot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Rotate the plane \"p\" around the ray \"r\", by angle \"a\" (in radians).",
								"text": "Can be overloaded.\n",
								"returns": "A new, rotated plane.\n"
							},
							"parameters": [
								{
									"id": 767,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 768,
									"name": "pln",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The plane to be rotated."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								},
								{
									"id": 769,
									"name": "ray",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ray to rotate the plane around."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								},
								{
									"id": 770,
									"name": "ang",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The angle to rotate the plane, in radians."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TPlane"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TPlane"
										}
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						795
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						756,
						791,
						771,
						776,
						781,
						786,
						750,
						760,
						765
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/plane.ts",
					"line": 9,
					"character": 0
				}
			]
		},
		{
			"id": 439,
			"name": "rand",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 458,
					"name": "randClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 459,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/rand.ts",
									"line": 95,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 460,
									"name": "new randClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 461,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 458,
										"name": "randClass"
									}
								}
							]
						},
						{
							"id": 462,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/rand.ts",
									"line": 94,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 463,
							"name": "rand",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/rand.ts",
									"line": 99,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 464,
									"name": "rand",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 465,
											"name": "min",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 466,
											"name": "max",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 467,
											"name": "seed",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 468,
							"name": "randInt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/rand.ts",
									"line": 103,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 469,
									"name": "randInt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 470,
											"name": "min",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 471,
											"name": "max",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 472,
											"name": "seed",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 473,
							"name": "randPick",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/rand.ts",
									"line": 107,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 474,
									"name": "randPick",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 475,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 476,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 477,
											"name": "seed",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								459
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								462
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								463,
								468,
								473
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/rand.ts",
							"line": 93,
							"character": 13
						}
					]
				},
				{
					"id": 440,
					"name": "rand",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/rand.ts",
							"line": 13,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 441,
							"name": "rand",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a random number in the specified range.\nIf `seed` is set: Returns a random number (with decimals) in the specified range, given a numeric seed.",
								"returns": "A number (with decimals).\n"
							},
							"parameters": [
								{
									"id": 442,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 443,
									"name": "min",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The minimum number (inclusive)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 444,
									"name": "max",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The maximum number (exclusive)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 445,
									"name": "seed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) If a seed is given, the result will be the same for the same seed."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 446,
					"name": "randInt",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/rand.ts",
							"line": 31,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 447,
							"name": "randInt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a random integer in the specified range.\nIf `seed` is set: Returns a random integer in the specified range, given a numeric seed.",
								"returns": "An integer.\n"
							},
							"parameters": [
								{
									"id": 448,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 449,
									"name": "min",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The minimum integer (inclusive)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 450,
									"name": "max",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The maximum integer (exclusive)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 451,
									"name": "seed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) A number. If a seed is given, the result will be the same for the same seed."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 452,
					"name": "randPick",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/rand.ts",
							"line": 50,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 453,
							"name": "randPick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a random set of items from the list.\nIf `seed` is set: Returns a random set of items from the list, based on the numeric seed.",
								"returns": "A list, or a value (if num is set to 1).\n"
							},
							"parameters": [
								{
									"id": 454,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 455,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list. The set of items that can be returned."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 456,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "An integer. The number of items to return from the list."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 457,
									"name": "seed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) A number. If a seed is given, the result will be the same for the same seed."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						458
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						440,
						446,
						452
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/rand.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 662,
			"name": "ray",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 708,
					"name": "rayClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 709,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/ray.ts",
									"line": 334,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 710,
									"name": "new rayClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 711,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 708,
										"name": "rayClass"
									}
								}
							]
						},
						{
							"id": 712,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/ray.ts",
									"line": 333,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 722,
							"name": "rayCopy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/ray.ts",
									"line": 346,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 723,
									"name": "rayCopy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 724,
											"name": "ray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 738,
							"name": "rayFromPln",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/ray.ts",
									"line": 362,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 739,
									"name": "rayFromPln",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 740,
											"name": "pln",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 718,
							"name": "rayFromTo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/ray.ts",
									"line": 342,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 719,
									"name": "rayFromTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 720,
											"name": "xyz1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 721,
											"name": "xyz2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 745,
							"name": "rayGtoL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/ray.ts",
									"line": 370,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 746,
									"name": "rayGtoL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 747,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 748,
											"name": "p",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 734,
							"name": "rayLMove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/ray.ts",
									"line": 358,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 735,
									"name": "rayLMove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 736,
											"name": "ray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 737,
											"name": "dist",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 741,
							"name": "rayLtoG",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/ray.ts",
									"line": 366,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 742,
									"name": "rayLtoG",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 743,
											"name": "r",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 744,
											"name": "p",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 713,
							"name": "rayMake",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/ray.ts",
									"line": 338,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 714,
									"name": "rayMake",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 715,
											"name": "origin",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 716,
											"name": "dir",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 717,
											"name": "len",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 725,
							"name": "rayMove",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/ray.ts",
									"line": 350,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 726,
									"name": "rayMove",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 727,
											"name": "ray",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 728,
											"name": "vec",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 729,
							"name": "rayRot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/ray.ts",
									"line": 354,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 730,
									"name": "rayRot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 731,
											"name": "ray1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 732,
											"name": "ray2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 733,
											"name": "ang",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								709
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								712
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								722,
								738,
								718,
								745,
								734,
								741,
								713,
								725,
								729
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/ray.ts",
							"line": 332,
							"character": 13
						}
					]
				},
				{
					"id": 674,
					"name": "rayCopy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/ray.ts",
							"line": 97,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 675,
							"name": "rayCopy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Make a copy of the ray \"r\".",
								"text": "Can be overloaded.\n",
								"returns": "A copy of the original ray.\n"
							},
							"parameters": [
								{
									"id": 676,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 677,
									"name": "ray",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The original ray to be copied."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TRay"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TRay"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 694,
					"name": "rayFromPln",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/ray.ts",
							"line": 232,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 695,
							"name": "rayFromPln",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Create a ray from a plane \"p\", with the same origin and with a direction along the plane's z axis.",
								"text": "Can be overloaded.\n",
								"returns": "A ray.\n"
							},
							"parameters": [
								{
									"id": 696,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 697,
									"name": "pln",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The input plane to create a ray from."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TRay"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TRay"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 669,
					"name": "rayFromTo",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/ray.ts",
							"line": 58,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 670,
							"name": "rayFromTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a ray between two points.",
								"text": "Can be overloaded.\n",
								"returns": "The created ray that has xyz1 as an origin and xyz2 as an endpoint.\n"
							},
							"parameters": [
								{
									"id": 671,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 672,
									"name": "xyz1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Point 1."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 673,
									"name": "xyz2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Point 2."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TRay"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TRay"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 703,
					"name": "rayGtoL",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/ray.ts",
							"line": 267,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 704,
							"name": "rayGtoL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transforms a ray from the global coordinate system to a local coordinate system defined by plane \"p\".",
								"text": "Can be overloaded.\n",
								"returns": "A new ray.\n"
							},
							"parameters": [
								{
									"id": 705,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 706,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ray to be transformed."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								},
								{
									"id": 707,
									"name": "p",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The target plane."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TRay"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TRay"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 689,
					"name": "rayLMove",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/ray.ts",
							"line": 196,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 690,
							"name": "rayLMove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Move the ray \"r\" relative to the ray direction vector, by distance \"d\".",
								"text": "Can be overloaded.\n",
								"returns": "The new, moved ray.\n"
							},
							"parameters": [
								{
									"id": 691,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 692,
									"name": "ray",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ray to be moved."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								},
								{
									"id": 693,
									"name": "dist",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The distance to move the ray by."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TRay"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TRay"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 698,
					"name": "rayLtoG",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/ray.ts",
							"line": 252,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 699,
							"name": "rayLtoG",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transforms a ray from a local coordinate system defined by plane \"p\" to the global coordinate system.",
								"text": "Can be overloaded.\n",
								"returns": "A new ray.\n"
							},
							"parameters": [
								{
									"id": 700,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 701,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ray to be transformed."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								},
								{
									"id": 702,
									"name": "p",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The source plane."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TRay"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TRay"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 663,
					"name": "rayMake",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/ray.ts",
							"line": 18,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 664,
							"name": "rayMake",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a ray from an origin \"o\" and a direction vector \"d\".\nIf `len` is set: Creates a ray from an origin \"o\", a direction vector \"d\", and length \"l\".",
								"text": "Can be overloaded.\n",
								"returns": "A new ray.\n"
							},
							"parameters": [
								{
									"id": 665,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 666,
									"name": "origin",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Coordinates in the form of [x, y, z]."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 667,
									"name": "dir",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A vector that provides the direction."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 668,
									"name": "len",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) An integer for the length."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TRay"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TRay"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 678,
					"name": "rayMove",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/ray.ts",
							"line": 116,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 679,
							"name": "rayMove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Move the ray \"r\" relative to the global X, Y, and Z axes, by vector \"v\".\n\\n\nCan be overloaded.\n\\n",
								"returns": "The new, moved ray.\n"
							},
							"parameters": [
								{
									"id": 680,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 681,
									"name": "ray",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ray to be moved."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								},
								{
									"id": 682,
									"name": "vec",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The vector to move the ray with."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TRay"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TRay"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 683,
					"name": "rayRot",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/ray.ts",
							"line": 153,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 684,
							"name": "rayRot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Rotate the ray \"r1\" around the ray \"r2\", by angle \"a\" (in radians).",
								"text": "Can be overloaded.\n",
								"returns": "The new, rotated ray.\n"
							},
							"parameters": [
								{
									"id": 685,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 686,
									"name": "ray1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ray to be rotated."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								},
								{
									"id": 687,
									"name": "ray2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The ray to be used as the axis of rotation."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TRay"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TRay"
												}
											}
										]
									}
								},
								{
									"id": 688,
									"name": "ang",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The angle (in radians) to rotate r1 by."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "TRay"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "TRay"
										}
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						708
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						674,
						694,
						669,
						703,
						689,
						698,
						663,
						678,
						683
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/ray.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1142,
			"name": "set",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 1162,
					"name": "setClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1163,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/set.ts",
									"line": 60,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1164,
									"name": "new setClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1165,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1162,
										"name": "setClass"
									}
								}
							]
						},
						{
							"id": 1166,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/set.ts",
									"line": 59,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1178,
							"name": "setDif",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/set.ts",
									"line": 76,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1179,
									"name": "setDif",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1180,
											"name": "list1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1181,
											"name": "list2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 1174,
							"name": "setInt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/set.ts",
									"line": 72,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1175,
									"name": "setInt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1176,
											"name": "list1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1177,
											"name": "list2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 1167,
							"name": "setMake",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/set.ts",
									"line": 64,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1168,
									"name": "setMake",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1169,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						},
						{
							"id": 1170,
							"name": "setUni",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/set.ts",
									"line": 68,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1171,
									"name": "setUni",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1172,
											"name": "list1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1173,
											"name": "list2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1163
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1166
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1178,
								1174,
								1167,
								1170
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/set.ts",
							"line": 58,
							"character": 13
						}
					]
				},
				{
					"id": 1157,
					"name": "setDif",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/set.ts",
							"line": 51,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1158,
							"name": "setDif",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new list of unique items from the difference of the two input lists.",
								"returns": "A new list with no repeated values.\n"
							},
							"parameters": [
								{
									"id": 1159,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1160,
									"name": "list1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 1161,
									"name": "list2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				},
				{
					"id": 1152,
					"name": "setInt",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/set.ts",
							"line": 39,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1153,
							"name": "setInt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new list of unique items from the intersection of the two input lists.",
								"returns": "A new list with no repeated values.\n"
							},
							"parameters": [
								{
									"id": 1154,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1155,
									"name": "list1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 1156,
									"name": "list2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				},
				{
					"id": 1143,
					"name": "setMake",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/set.ts",
							"line": 14,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1144,
							"name": "setMake",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new list of unique items from the input list.\n\\n\n- `setMake([1,1,1,2,2,3])`          // returns [1,2,3]",
								"returns": "A new list with no repeated values.\n"
							},
							"parameters": [
								{
									"id": 1145,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1146,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The input list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				},
				{
					"id": 1147,
					"name": "setUni",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/set.ts",
							"line": 27,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1148,
							"name": "setUni",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a new list of unique items from the union of the two input lists.",
								"returns": "A new list with no repeated values.\n"
							},
							"parameters": [
								{
									"id": 1149,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1150,
									"name": "list1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 1151,
									"name": "list2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second list."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1162
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1157,
						1152,
						1143,
						1147
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/set.ts",
					"line": 5,
					"character": 0
				}
			]
		},
		{
			"id": 136,
			"name": "statistics",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 169,
					"name": "statisticsClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 170,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/statistics.ts",
									"line": 128,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 171,
									"name": "new statisticsClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 172,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 169,
										"name": "statisticsClass"
									}
								}
							]
						},
						{
							"id": 173,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/statistics.ts",
									"line": 127,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 180,
							"name": "mad",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/statistics.ts",
									"line": 140,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 181,
									"name": "mad",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 182,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 177,
							"name": "max",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/statistics.ts",
									"line": 136,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 178,
									"name": "max",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 179,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 183,
							"name": "mean",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/statistics.ts",
									"line": 144,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 184,
									"name": "mean",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 185,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 186,
							"name": "median",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/statistics.ts",
									"line": 148,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 187,
									"name": "median",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 188,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 174,
							"name": "min",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/statistics.ts",
									"line": 132,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 175,
									"name": "min",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 176,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 189,
							"name": "mode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/statistics.ts",
									"line": 152,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 190,
									"name": "mode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 191,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 192,
							"name": "std",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/statistics.ts",
									"line": 156,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 193,
									"name": "std",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 194,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 195,
							"name": "vari",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/statistics.ts",
									"line": 160,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 196,
									"name": "vari",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 197,
											"name": "list",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								170
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								173
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								180,
								177,
								183,
								186,
								174,
								189,
								192,
								195
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/statistics.ts",
							"line": 126,
							"character": 13
						}
					]
				},
				{
					"id": 145,
					"name": "mad",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/statistics.ts",
							"line": 63,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 146,
							"name": "mad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the median absolute deviation of the list.",
								"returns": "A number (The median absolute deviation).\n"
							},
							"parameters": [
								{
									"id": 147,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 148,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list containing numbers."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 141,
					"name": "max",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/statistics.ts",
							"line": 44,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 142,
							"name": "max",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the largest of the given numbers.",
								"text": "If any one or more of the parameters cannot be converted into a number, NaN is returned.\n```\nmax([5,3,6,2,4])    // 6\nmax(5,3,6,2,4)      // 6\n```",
								"returns": "A number.\n"
							},
							"parameters": [
								{
									"id": 143,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 144,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list of numbers, or a sequence of numbers."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 149,
					"name": "mean",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/statistics.ts",
							"line": 74,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 150,
							"name": "mean",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the mean value of the list.",
								"returns": "A number (The mean).\n"
							},
							"parameters": [
								{
									"id": 151,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 152,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list containing numbers."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 153,
					"name": "median",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/statistics.ts",
							"line": 85,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 154,
							"name": "median",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the median of the list.",
								"returns": "A number (The median).\n"
							},
							"parameters": [
								{
									"id": 155,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 156,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list containing numbers."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 137,
					"name": "min",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/statistics.ts",
							"line": 19,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 138,
							"name": "min",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the smallest of the given numbers.\n\\n\nIf any one or more of the parameters cannot be converted into a number, NaN is returned.\n\\n\nIf no parameters are provided, Infinity is returned.\n\\n\n```\nmin([5,3,6,2,4])    // 2\nmin(5,3,6,2,4)      // 2\n```",
								"returns": "A number or a list of numbers.\n"
							},
							"parameters": [
								{
									"id": 139,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 140,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list of numbers, or a sequence of numbers."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 157,
					"name": "mode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/statistics.ts",
							"line": 96,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 158,
							"name": "mode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the mode of the list.",
								"returns": "A number (The mode).\n"
							},
							"parameters": [
								{
									"id": 159,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 160,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list containing numbers."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 161,
					"name": "std",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/statistics.ts",
							"line": 108,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 162,
							"name": "std",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the standard deviation of the list.",
								"returns": "A number (The standard deviation).\n"
							},
							"parameters": [
								{
									"id": 163,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 164,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list containing numbers."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 165,
					"name": "vari",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/statistics.ts",
							"line": 119,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 166,
							"name": "vari",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the variance of the list.",
								"returns": "A number (The variance).\n"
							},
							"parameters": [
								{
									"id": 167,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 168,
									"name": "list",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list containing numbers."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						169
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						145,
						141,
						149,
						153,
						137,
						157,
						161,
						165
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/statistics.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 329,
			"name": "strs",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 388,
					"name": "strsClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 389,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 199,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 390,
									"name": "new strsClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 391,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 388,
										"name": "strsClass"
									}
								}
							]
						},
						{
							"id": 392,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 198,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 432,
							"name": "strEnds",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 243,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 433,
									"name": "strEnds",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 434,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 435,
											"name": "ends",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "boolean"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 401,
							"name": "strLow",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 211,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 402,
									"name": "strLow",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 403,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 413,
							"name": "strPadL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 227,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 414,
									"name": "strPadL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 415,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 416,
											"name": "max",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 417,
											"name": "fill",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 418,
							"name": "strPadR",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 231,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 419,
									"name": "strPadR",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 420,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 421,
											"name": "max",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 422,
											"name": "fill",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 393,
							"name": "strRepl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 203,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 394,
									"name": "strRepl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 395,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 396,
											"name": "search_str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 397,
											"name": "new_str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 428,
							"name": "strStarts",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 239,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 429,
									"name": "strStarts",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 430,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 431,
											"name": "starts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "boolean"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 423,
							"name": "strSub",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 235,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 424,
									"name": "strSub",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 425,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 426,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 427,
											"name": "length",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 436,
							"name": "strToJSON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 246,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 437,
									"name": "strToJSON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 438,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 404,
							"name": "strTrim",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 215,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 405,
									"name": "strTrim",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 406,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 410,
							"name": "strTrimL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 223,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 411,
									"name": "strTrimL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 412,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 407,
							"name": "strTrimR",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 219,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 408,
									"name": "strTrimR",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 409,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 398,
							"name": "strUpp",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/strs.ts",
									"line": 207,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 399,
									"name": "strUpp",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 400,
											"name": "str",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								389
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								392
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								432,
								401,
								413,
								418,
								393,
								428,
								423,
								436,
								404,
								410,
								407,
								398
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/strs.ts",
							"line": 197,
							"character": 13
						}
					]
				},
				{
					"id": 379,
					"name": "strEnds",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/strs.ts",
							"line": 170,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 380,
							"name": "strEnds",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the string s1 ends with s2, false otherwise.",
								"returns": "True or False.\n\n"
							},
							"parameters": [
								{
									"id": 381,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 382,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A string, \"s1\"."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 383,
									"name": "ends",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A string, \"s2\"."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 340,
					"name": "strLow",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/strs.ts",
							"line": 55,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 341,
							"name": "strLow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts all the alphabetic characters in a string to lowercase.",
								"returns": "The modified lowercase string.\n"
							},
							"parameters": [
								{
									"id": 342,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 343,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Input string."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 356,
					"name": "strPadL",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/strs.ts",
							"line": 113,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 357,
							"name": "strPadL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Pads the start of the s1 string with white spaces so that the resulting string reaches a given length.\nPads the start of the s1 string with the s2 string so that the resulting string reaches a given length.",
								"returns": "The modified string.\n"
							},
							"parameters": [
								{
									"id": 358,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 359,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\"s1\", Input string."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 360,
									"name": "max",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "An integer (the desired length)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 361,
									"name": "fill",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) \"s2\", The string to pad the input string with, starting from the left of s1."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 362,
					"name": "strPadR",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/strs.ts",
							"line": 128,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 363,
							"name": "strPadR",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Pads the end of the s1 string with white spaces so that the resulting string reaches a given length.\nPads the end of the s1 string with the s2 string so that the resulting string reaches a given length.",
								"returns": "The modified string.\n"
							},
							"parameters": [
								{
									"id": 364,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 365,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\"s1\", Input string."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 366,
									"name": "max",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "An integer (the desired length)."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 367,
									"name": "fill",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) \"s2\", The string to pad the input string with, starting from the right of s1."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 330,
					"name": "strRepl",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/strs.ts",
							"line": 31,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 331,
							"name": "strRepl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Replace all instances of specified search string with a new string. The search string can be a regular expression.",
								"returns": "The modified string.\n"
							},
							"parameters": [
								{
									"id": 332,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 333,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "String to search through and modify."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 334,
									"name": "search_str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "String to search for and replace."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 335,
									"name": "new_str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "New string to replace search\\_str."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 374,
					"name": "strStarts",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/strs.ts",
							"line": 156,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 375,
							"name": "strStarts",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the string s1 starts with s2, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 376,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 377,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A string, \"s1\"."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 378,
									"name": "starts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A string, \"s2\"."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 368,
					"name": "strSub",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/strs.ts",
							"line": 143,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 369,
							"name": "strSub",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a substring beginning at the specified index and ending at the end of the string.\nIf `length` is set: Gets a substring beginning at the specified index and having the specified length.",
								"returns": "The modified string.\n"
							},
							"parameters": [
								{
									"id": 370,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 371,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A string."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 372,
									"name": "from",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "An integer corresponding to the starting index."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 373,
									"name": "length",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "(Optional) An integer for the specified length."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 384,
					"name": "strToJSON",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/strs.ts",
							"line": 190,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 385,
							"name": "strToJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a JSON object parsed from an input string.\n\\n\n<a href =\"https://www.w3schools.com/js/js_json_objects.asp\" target=\"_blank\">See w3schools for more info on JSON objects. </a>",
								"text": "```\nstrToJSON(\"{\\\"name\\\":\\\"John\\\",\\\"age\\\":\\\"30\\\"}\")    \n\\\\ {\"<b>name</b>\": \"John\", \"<b>age</b>\": \"30\"}\n```\n",
								"returns": "A JSON object.\n"
							},
							"parameters": [
								{
									"id": 386,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 387,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Input string."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 344,
					"name": "strTrim",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/strs.ts",
							"line": 74,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 345,
							"name": "strTrim",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes the leading and trailing white space and line terminator characters from a string.\n```\nstrTrim(\"This\\ is a \\sentence\")         \n\\\\ \"This is a sentence\" (\\ is considered a line terminator character.)",
								"text": "strTrim(\"           This used to have whitespace        \")    \n\\\\ \"This used to have whitespace\"\n```",
								"returns": "The modified string.\n"
							},
							"parameters": [
								{
									"id": 346,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 347,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Input string."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 352,
					"name": "strTrimL",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/strs.ts",
							"line": 98,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 353,
							"name": "strTrimL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes whitespace from the left end of a string.",
								"returns": "The modified string.\n"
							},
							"parameters": [
								{
									"id": 354,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 355,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Input string."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 348,
					"name": "strTrimR",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/strs.ts",
							"line": 86,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 349,
							"name": "strTrimR",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Removes whitespace from the right end of a string.",
								"returns": "The modified string.\n"
							},
							"parameters": [
								{
									"id": 350,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 351,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Input string."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 336,
					"name": "strUpp",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/strs.ts",
							"line": 43,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 337,
							"name": "strUpp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts all the alphabetic characters in a string to uppercase.",
								"returns": "The modified uppercase string.\n"
							},
							"parameters": [
								{
									"id": 338,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 339,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Input string."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						388
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						379,
						340,
						356,
						362,
						330,
						374,
						368,
						384,
						344,
						352,
						348,
						336
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/strs.ts",
					"line": 4,
					"character": 0
				}
			]
		},
		{
			"id": 39,
			"name": "trigonometry",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 92,
					"name": "trigonometryClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 93,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 269,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 94,
									"name": "new trigonometryClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 95,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 92,
										"name": "trigonometryClass"
									}
								}
							]
						},
						{
							"id": 96,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 268,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 112,
							"name": "acos",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 293,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 113,
									"name": "acos",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 114,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 118,
							"name": "acosh",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 301,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 119,
									"name": "acosh",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 120,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 100,
							"name": "asin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 277,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 101,
									"name": "asin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 102,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 106,
							"name": "asinh",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 285,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 107,
									"name": "asinh",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 108,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 124,
							"name": "atan",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 309,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 125,
									"name": "atan",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 126,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 127,
							"name": "atan2",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 313,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 128,
									"name": "atan2",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129,
											"name": "xy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 133,
							"name": "atanh",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 321,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 134,
									"name": "atanh",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 135,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 109,
							"name": "cos",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 289,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 110,
									"name": "cos",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 111,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 115,
							"name": "cosh",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 297,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 116,
									"name": "cosh",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 117,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 97,
							"name": "sin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 273,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 98,
									"name": "sin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 99,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 103,
							"name": "sinh",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 281,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 104,
									"name": "sinh",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 105,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 121,
							"name": "tan",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 305,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 122,
									"name": "tan",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 123,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 130,
							"name": "tanh",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/trigonometry.ts",
									"line": 317,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 131,
									"name": "tanh",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 132,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								93
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								96
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								112,
								118,
								100,
								106,
								124,
								127,
								133,
								109,
								115,
								97,
								103,
								121,
								130
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 267,
							"character": 13
						}
					]
				},
				{
					"id": 60,
					"name": "acos",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 113,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 61,
							"name": "acos",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the arc-cosine (in radians) of the given number between -1 and 1; otherwise, NaN.\n```\nacos(-2);  // NaN\nacos(-1);  // 3.141592653589793\nacos(0);   // 1.5707963267948966\nacos(0.5); // 1.0471975511965979\nacos(1);   // 0\nacos(2);   // NaN\n```",
								"returns": "A number, list of numbers or NaN.\n"
							},
							"parameters": [
								{
									"id": 62,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 63,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers between -1 and 1."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 68,
					"name": "acosh",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 154,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 69,
							"name": "acosh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the hyperbolic arc-cosine of the given number. If the number is less than 1, NaN.\n\\n\n```\nacosh(-1);  // NaN\nacosh(0);   // NaN\nacosh(0.5); // NaN\nacosh(1);   // 0\nacosh(2);   // 1.3169578969248166\n```",
								"returns": "A number, or NaN.\n"
							},
							"parameters": [
								{
									"id": 70,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 71,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 44,
					"name": "asin",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 35,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 45,
							"name": "asin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the arcsine (in radians) of the given number if it's between -1 and 1; otherwise, NaN.\n```\nasin(-2);  // NaN\nasin(-1);  // -1.5707963267948966 (-pi/2)\nasin(0);   // 0\nasin(0.5); // 0.5235987755982989\nasin(1);   // 1.5707963267948966 (pi/2)\nasin(2);   // NaN\n```",
								"returns": "A number or list of numbers (in radians).\n"
							},
							"parameters": [
								{
									"id": 46,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 47,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers between -1 and 1."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 52,
					"name": "asinh",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 71,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 53,
							"name": "asinh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the hyperbolic arcsine of the given number.\n```\nasinh(1);  // 0.881373587019543\nasinh(0);  // 0\n```",
								"returns": "A number or list of numbers.\n"
							},
							"parameters": [
								{
									"id": 54,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 55,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 76,
					"name": "atan",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 197,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 77,
							"name": "atan",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the arc-tangent (in radians) of the given number.\n\\n\n```\natan(1);   // 0.7853981633974483\natan(0);   // 0\natan(-0);  // -0\natan(Infinity);   //  1.5707963267948966\natan(-Infinity);  // -1.5707963267948966\n```",
								"text": "// The angle that the line [(0,0);(x,y)] forms with the x-axis in a Cartesian coordinate system\natan(y / x);\n"
							},
							"parameters": [
								{
									"id": 78,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 79,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers between -1 and 1.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 80,
					"name": "atan2",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 215,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 81,
							"name": "atan2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the angle in radians (in [-π,π]) between the positive x-axis and the ray from (0,0) to the point\n```\natan2([15, 90]]); // 1.4056476493802699\natan2([90, 15]]); // 0.16514867741462683\n```",
								"returns": "A number (in radians).\n"
							},
							"parameters": [
								{
									"id": 82,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 83,
									"name": "xy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A list of two numbers [x,y] or a list of lists [[x,y], [x,y], [x,y]...]."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 88,
					"name": "atanh",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 257,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 89,
							"name": "atanh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the hyperbolic arc-tangent of the given number.\n```\natanh(-2);  // NaN\natanh(-1);  // -Infinity\natanh(0);   // 0\natanh(0.5); // 0.5493061443340548\natanh(1);   // Infinity\natanh(2);   // NaN\n```",
								"returns": "A number or list of numbers.\n"
							},
							"parameters": [
								{
									"id": 90,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 91,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 56,
					"name": "cos",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 91,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 57,
							"name": "cos",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the cosine of the given number.\n```\ncos(0);           // 1\ncos(1);           // 0.5403023058681398\ncos(Math.PI);     // -1\ncos(2 * PI);      // 1\n```",
								"returns": "A number or list of numbers.\n"
							},
							"parameters": [
								{
									"id": 58,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 59,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers (in radians)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 64,
					"name": "cosh",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 132,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 65,
							"name": "cosh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the hyperbolic cosine (in radians) of the given number.\n```\ncosh(0); // 1\ncosh(1); // 1.5430806348152437\n```",
								"returns": "A number.\n"
							},
							"parameters": [
								{
									"id": 66,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 67,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers (in radians)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 40,
					"name": "sin",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 13,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 41,
							"name": "sin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the sine of the given number.\n```\nsin(0);           // 0\nsin(1);           // 0.8414709848078965\n```",
								"returns": "A number or list of numbers.\n"
							},
							"parameters": [
								{
									"id": 42,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 43,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers (in radians)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 48,
					"name": "sinh",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 53,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 49,
							"name": "sinh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the hyperbolic sine (in radians) of the given number.\n```\nsinh(0); // 0\nsinh(1); // 1.1752011936438014\n```",
								"returns": "A number or list of numbers (in radians).\n"
							},
							"parameters": [
								{
									"id": 50,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 51,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 72,
					"name": "tan",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 172,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 73,
							"name": "tan",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the tangent of the given number.\n\\n\n```\ntan(1); // 1.5574077246549023\n```",
								"returns": "A number.\n"
							},
							"parameters": [
								{
									"id": 74,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 75,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers (in radians)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 84,
					"name": "tanh",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/trigonometry.ts",
							"line": 235,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 85,
							"name": "tanh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns the hyperbolic tangent of the given number.\n```\ntanh(0);        // 0\ntanh(Infinity); // 1\ntanh(1);        // 0.7615941559557649\n```",
								"returns": "A number or list of numbers.\n"
							},
							"parameters": [
								{
									"id": 86,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 87,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers (in radians)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						92
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						60,
						68,
						44,
						52,
						76,
						80,
						88,
						56,
						64,
						40,
						48,
						72,
						84
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/trigonometry.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 198,
			"name": "types",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"comment": {
				"shortText": "Functions to check types."
			},
			"children": [
				{
					"id": 269,
					"name": "typesClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 270,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 169,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 271,
									"name": "new typesClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 272,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 269,
										"name": "typesClass"
									}
								}
							]
						},
						{
							"id": 273,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 168,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 319,
							"name": "_isIn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 233,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 320,
									"name": "_isIn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 321,
											"name": "v1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 322,
											"name": "v2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 323,
											"name": "v3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 324,
							"name": "_isWithin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 237,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 325,
									"name": "_isWithin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 326,
											"name": "v1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 327,
											"name": "v2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 328,
											"name": "v3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 283,
							"name": "isBool",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 185,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 284,
									"name": "isBool",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 285,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 301,
							"name": "isCol",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 209,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 302,
									"name": "isCol",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 303,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 292,
							"name": "isDict",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 197,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 293,
									"name": "isDict",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 294,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 280,
							"name": "isFlt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 181,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 281,
									"name": "isFlt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 282,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 277,
							"name": "isInt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 177,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 278,
									"name": "isInt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 279,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 289,
							"name": "isList",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 193,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 290,
									"name": "isList",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 291,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 310,
							"name": "isNaN",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 221,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 311,
									"name": "isNaN",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 312,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 313,
							"name": "isNull",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 225,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 314,
									"name": "isNull",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 315,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 274,
							"name": "isNum",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 173,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 275,
									"name": "isNum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 276,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 307,
							"name": "isPln",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 217,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 308,
									"name": "isPln",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 309,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 304,
							"name": "isRay",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 213,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 305,
									"name": "isRay",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 306,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 286,
							"name": "isStr",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 189,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 287,
									"name": "isStr",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 288,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 316,
							"name": "isUndef",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 229,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 317,
									"name": "isUndef",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 318,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 295,
							"name": "isVec2",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 201,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 296,
									"name": "isVec2",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 297,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 298,
							"name": "isVec3",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/types.ts",
									"line": 205,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 299,
									"name": "isVec3",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 300,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								270
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								273
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								319,
								324,
								283,
								301,
								292,
								280,
								277,
								289,
								310,
								313,
								274,
								307,
								304,
								286,
								316,
								295,
								298
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 167,
							"character": 13
						}
					]
				},
				{
					"id": 259,
					"name": "_isIn",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 152,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 260,
							"name": "_isIn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "To be completed..."
							},
							"parameters": [
								{
									"id": 261,
									"name": "v1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 262,
									"name": "v2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 263,
									"name": "v3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 264,
					"name": "_isWithin",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 162,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 265,
							"name": "_isWithin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "To be completed..."
							},
							"parameters": [
								{
									"id": 266,
									"name": "v1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 267,
									"name": "v2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 268,
									"name": "v3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 211,
					"name": "isBool",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 52,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 212,
							"name": "isBool",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the value is a boolean, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 213,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 214,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 235,
					"name": "isCol",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 103,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 236,
							"name": "isCol",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the value is a list of three numbers in the range [0, 1], false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 237,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 238,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 223,
					"name": "isDict",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 76,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 224,
							"name": "isDict",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the value is a dictionary, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 225,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 226,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 207,
					"name": "isFlt",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 43,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 208,
							"name": "isFlt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the value is a floating point number, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 209,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 210,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 203,
					"name": "isInt",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 35,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 204,
							"name": "isInt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the value is a integer, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 205,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 206,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 219,
					"name": "isList",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 68,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 220,
							"name": "isList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the value is a list, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 221,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 222,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 247,
					"name": "isNaN",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 127,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 248,
							"name": "isNaN",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true is the value is not a number (NaN), false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 249,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 250,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 251,
					"name": "isNull",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 135,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 252,
							"name": "isNull",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true is the value is null, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 253,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 254,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 199,
					"name": "isNum",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 27,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 200,
							"name": "isNum",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the value is a number, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 201,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 202,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 243,
					"name": "isPln",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 119,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 244,
							"name": "isPln",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the value is a plane, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 245,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 246,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 239,
					"name": "isRay",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 111,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 240,
							"name": "isRay",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the value is a ray, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 241,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 242,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 215,
					"name": "isStr",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 60,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 216,
							"name": "isStr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the value is a string, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 217,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 218,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 255,
					"name": "isUndef",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 143,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 256,
							"name": "isUndef",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true is the value is undefined, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 257,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 258,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 227,
					"name": "isVec2",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 85,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 228,
							"name": "isVec2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the value is a list of two numbers, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 229,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 230,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 231,
					"name": "isVec3",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/types.ts",
							"line": 94,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 232,
							"name": "isVec3",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the value is a list of three numbers, false otherwise.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 233,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 234,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "Value to be checked."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						269
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						259,
						264,
						211,
						235,
						223,
						207,
						203,
						219,
						247,
						251,
						199,
						243,
						239,
						215,
						255,
						227,
						231
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/types.ts",
					"line": 27,
					"character": 0
				}
			]
		},
		{
			"id": 1297,
			"name": "util",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 1298,
					"name": "utilClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1299,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/util.ts",
									"line": 7,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 1300,
									"name": "new utilClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1301,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1298,
										"name": "utilClass"
									}
								}
							]
						},
						{
							"id": 1302,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/util.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1299
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1302
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/util.ts",
							"line": 5,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1298
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/util.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 478,
			"name": "vec",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 578,
					"name": "vecClass",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 579,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 812,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 580,
									"name": "new vecClass",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 581,
											"name": "debug",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 578,
										"name": "vecClass"
									}
								}
							]
						},
						{
							"id": 582,
							"name": "__debug__",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 811,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 592,
							"name": "vecAdd",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 828,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 593,
									"name": "vecAdd",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 594,
											"name": "v1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 595,
											"name": "v2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 596,
											"name": "norm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 622,
							"name": "vecAng",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 856,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 623,
									"name": "vecAng",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 624,
											"name": "v1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 625,
											"name": "v2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 635,
							"name": "vecAng2",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 868,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 636,
									"name": "vecAng2",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 637,
											"name": "v1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 638,
											"name": "v2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 639,
											"name": "v3",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 586,
							"name": "vecAvg",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 820,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 587,
									"name": "vecAvg",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 588,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Txyz"
									}
								}
							]
						},
						{
							"id": 589,
							"name": "vecAvgDir",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 824,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 590,
									"name": "vecAvgDir",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 591,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Txyz"
									}
								}
							]
						},
						{
							"id": 618,
							"name": "vecCross",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 852,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 619,
									"name": "vecCross",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 620,
											"name": "v1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 621,
											"name": "v2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 602,
							"name": "vecDiv",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 836,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 603,
									"name": "vecDiv",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 604,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 605,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 614,
							"name": "vecDot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 848,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 615,
									"name": "vecDot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 616,
											"name": "v1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 617,
											"name": "v2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 630,
							"name": "vecEqual",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 864,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 631,
									"name": "vecEqual",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 632,
											"name": "v1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 633,
											"name": "v2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 634,
											"name": "tol",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "boolean"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 626,
							"name": "vecFromTo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 860,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 627,
									"name": "vecFromTo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 628,
											"name": "xyz1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 629,
											"name": "xyz2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 658,
							"name": "vecGtoL",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 892,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 659,
									"name": "vecGtoL",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 660,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 661,
											"name": "p",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 645,
							"name": "vecLen",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 876,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 646,
									"name": "vecLen",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 647,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 654,
							"name": "vecLtoG",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 888,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 655,
									"name": "vecLtoG",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 656,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 657,
											"name": "p",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 606,
							"name": "vecMult",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 840,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 607,
									"name": "vecMult",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 608,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 609,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 648,
							"name": "vecNorm",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 880,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 649,
									"name": "vecNorm",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 650,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 651,
							"name": "vecRev",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 884,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 652,
									"name": "vecRev",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 653,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 640,
							"name": "vecRot",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 872,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 641,
									"name": "vecRot",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 642,
											"name": "v1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 643,
											"name": "v2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 644,
											"name": "ang",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 610,
							"name": "vecSetLen",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 844,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 611,
									"name": "vecSetLen",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 612,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 613,
											"name": "num",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 597,
							"name": "vecSub",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 832,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 598,
									"name": "vecSub",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 599,
											"name": "v1",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 600,
											"name": "v2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 601,
											"name": "norm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 583,
							"name": "vecSum",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "inline/vec.ts",
									"line": 816,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 584,
									"name": "vecSum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 585,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Txyz"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								579
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								582
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								592,
								622,
								635,
								586,
								589,
								618,
								602,
								614,
								630,
								626,
								658,
								645,
								654,
								606,
								648,
								651,
								640,
								610,
								597,
								583
							]
						}
					],
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 810,
							"character": 13
						}
					]
				},
				{
					"id": 491,
					"name": "vecAdd",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 104,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 492,
							"name": "vecAdd",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds two vectors.",
								"text": "If v1 is a single vector, v2 should be a single vector.\nIf v1 is a list of vectors, v2 should be a list of vectors with an equal length to v.\n",
								"returns": "The result vector.\n\n"
							},
							"parameters": [
								{
									"id": 493,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 494,
									"name": "v1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 495,
									"name": "v2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 496,
									"name": "norm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "True or False: Normalize the resulting vector."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Txyz"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 528,
					"name": "vecAng",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 401,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 529,
							"name": "vecAng",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calculate the angle (0 to PI) between two vectors.\n\\n\nThe inner (smaller) angle is always returned, which will always be smaller than or equal to PI.\n\\n\nIf v1 is a single vector, v2 should be a single vector.\nIf v1 is a list of vectors, v2 should be a list of vectors with an equal length to v1.",
								"returns": "An angle in radians.\n"
							},
							"parameters": [
								{
									"id": 530,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 531,
									"name": "v1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 532,
									"name": "v2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 544,
					"name": "vecAng2",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 525,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 545,
							"name": "vecAng2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calculate the angle (0 to 2PI) between two vectors, relative to the plane normal.\n\\n\nUnlike the vecAng() function, this funtion may return an angle larger than PI.\n\\n\nThe function calculates the angle from the first vector to the second vector\nin a counter-clockwise direction, assuming the normal is pointing up towards the viewer.\n\\n",
								"returns": "The angle, in radians.\n"
							},
							"parameters": [
								{
									"id": 546,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 547,
									"name": "v1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 548,
									"name": "v2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 549,
									"name": "v3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A normal vector or a list of normal vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 483,
					"name": "vecAvg",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 47,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 484,
							"name": "vecAvg",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calculates the average vector given a list of vectors.\n\\n\nThe input vectors and resulting average vector are all normalised.\n\\n\nThe function can be called in two ways:\n`vec = vecAvg([vec1, vec2, vec3])`\n`vec = vecAvg(vec1, vec2, vec3)`\n\\n",
								"returns": "The average vector.\n"
							},
							"parameters": [
								{
									"id": 485,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 486,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"shortText": "A list of vectors or just multiple vectors."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Txyz"
							}
						}
					]
				},
				{
					"id": 487,
					"name": "vecAvgDir",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 77,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 488,
							"name": "vecAvgDir",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calculates a normalised vector with a direction that is the average of the directions of the input vectors.\n\\n\nThe result is equivalent to:\n`vec = vecNorm(vecSum(vecNorm(v)))`\n\\n\nNote that if the input vectors cancel each other out, the result will be `[0,0,0]`.\n\\n\nThe function can be called in two ways:\n`vec = vecAvgDir([vec1, vec2, vec3])`\n`vec = vecAvgDir(vec1, vec2, vec3)`\n\\n",
								"returns": "The result vector.\n"
							},
							"parameters": [
								{
									"id": 489,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 490,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"shortText": "A list of input vectors or just multiple vectors."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Txyz"
							}
						}
					]
				},
				{
					"id": 523,
					"name": "vecCross",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 358,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 524,
							"name": "vecCross",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calculates the cross product of two vectors.\n\\n\nIf v1 is a single vector, v2 should be a single vector.\nIf v1 is a list of vectors, v2 should be a list of vectors with an equal length to v1.",
								"returns": "The resultant cross product, a list of 3 numbers.\n"
							},
							"parameters": [
								{
									"id": 525,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 526,
									"name": "v1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 527,
									"name": "v2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Txyz"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 503,
					"name": "vecDiv",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 190,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 504,
							"name": "vecDiv",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Divides a vector by a number.\n\\n\nIf v is a single vector, num should be a single number.\nIf v is a list of vectors, num should be a list of numbers with an equal length to v.",
								"returns": "The result vector.\n\n"
							},
							"parameters": [
								{
									"id": 505,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 506,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The input vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 507,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers (to divide the vector by)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Txyz"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 518,
					"name": "vecDot",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 317,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 519,
							"name": "vecDot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calculates the dot product of two vectors.\n\\n\nIf v1 is a single vector, v2 should be a single vector.\nIf v1 is a list of vectors, v2 should be a list of vectors with an equal length to v1.",
								"returns": "The number, the result dot product.\n"
							},
							"parameters": [
								{
									"id": 520,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 521,
									"name": "v1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 522,
									"name": "v2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 538,
					"name": "vecEqual",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 483,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 539,
							"name": "vecEqual",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns true if the difference between two vectors is smaller than a specified tolerance.",
								"returns": "True or False.\n"
							},
							"parameters": [
								{
									"id": 540,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 541,
									"name": "v1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 542,
									"name": "v2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 543,
									"name": "tol",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers to specify the tolerance."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "boolean"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 533,
					"name": "vecFromTo",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 443,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 534,
							"name": "vecFromTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a vector between two points.\n\\n\nIf xyz1 is a single point, xyz2 should be a single point.\nIf xyz1 is a list of points, xyz2 should be a list of points with an equal length to v1.",
								"returns": "The new vector.\n"
							},
							"parameters": [
								{
									"id": 535,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 536,
									"name": "xyz1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first point or list of points."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 537,
									"name": "xyz2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second point or list of points."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Txyz"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 573,
					"name": "vecGtoL",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 764,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 574,
							"name": "vecGtoL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transforms a vector from the global coordinate system to a local coordinate system defined by plane \"p\".\n\\n\nIf v is a single vector, p should be a single plane.\nIf v is a list of vectors, p should be a list of planes with an equal length to v1.",
								"returns": "A new vector or list of new vectors.\n"
							},
							"parameters": [
								{
									"id": 575,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 576,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The vector or list of vectors to be transformed."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 577,
									"name": "p",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The target plane or list of planes."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Txyz"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 556,
					"name": "vecLen",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 687,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 557,
							"name": "vecLen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calculates the magnitude of a vector.",
								"returns": "A number or list of numbers.\n"
							},
							"parameters": [
								{
									"id": 558,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 559,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The input vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 568,
					"name": "vecLtoG",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 748,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 569,
							"name": "vecLtoG",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Transforms a vector from a local coordinate system defined by plane \"p\" to the global coordinate system.",
								"text": "If v is a single vector, p should be a single plane.\nIf v is a list of vectors, p should be a list of planes with an equal length to v1.\n",
								"returns": "A new vector or list of new vectors.\n"
							},
							"parameters": [
								{
									"id": 570,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 571,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The vector to be transformed."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 572,
									"name": "p",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The source plane."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "TPlane"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "TPlane"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Txyz"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 508,
					"name": "vecMult",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 232,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 509,
							"name": "vecMult",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Multiplies a vector by a number.\n\\n\nIf v is a single vector, num should be a single number.\nIf v is a list of vectors, num should be a list of numbers with an equal length to v.",
								"returns": "The result vector.\n"
							},
							"parameters": [
								{
									"id": 510,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 511,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The input vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 512,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers (to multiply the vector by)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Txyz"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 560,
					"name": "vecNorm",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 706,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 561,
							"name": "vecNorm",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the magnitude of a vector to 1.",
								"returns": "A new vector or list of new vectors(with a magnitude of 1).\n"
							},
							"parameters": [
								{
									"id": 562,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 563,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The input vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Txyz"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 564,
					"name": "vecRev",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 725,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 565,
							"name": "vecRev",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reverses the direction of a vector.",
								"returns": "A new vector or list of new vectors.\n"
							},
							"parameters": [
								{
									"id": 566,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 567,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The input vector or list of vectors."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Txyz"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 550,
					"name": "vecRot",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 606,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 551,
							"name": "vecRot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Rotates one vector around another vector by a specified angle (in radians).",
								"returns": "The new vector.\n"
							},
							"parameters": [
								{
									"id": 552,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 553,
									"name": "v1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The first vector or list of vectors to be rotated."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 554,
									"name": "v2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The second vector or list of vectors for v1 to rotate around."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 555,
									"name": "ang",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The angle or list of angles to rotate v1 by (in radians)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Txyz"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 513,
					"name": "vecSetLen",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 274,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 514,
							"name": "vecSetLen",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the magnitude of a vector.\n\\n\nIf v is a single vector, num should be a single number.\nIf v is a list of vectors, num should be a list of numbers with an equal length to v.",
								"returns": "The result vector.\n"
							},
							"parameters": [
								{
									"id": 515,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 516,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The input vector or list of vectors. (It can have no set magnitude or have its current one be overwritten)."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 517,
									"name": "num",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "A number or list of numbers for the new magnitude of v."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Txyz"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 497,
					"name": "vecSub",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 147,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 498,
							"name": "vecSub",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Subtracts v2 from v1.",
								"text": "If v1 is a single vector, v2 should be a single vector.\nIf v1 is a list of vectors, v2 should be a list of vectors with an equal length to v.\n",
								"returns": "The result vector.\n"
							},
							"parameters": [
								{
									"id": 499,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 500,
									"name": "v1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The vector or list of vectors to be subtracted from."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 501,
									"name": "v2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The vector or list of vectors to subtract by. (Is unmodified by the expression.)"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Txyz"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "Txyz"
												}
											}
										]
									}
								},
								{
									"id": 502,
									"name": "norm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "True or False: Normalize the resulting vector."
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Txyz"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 479,
					"name": "vecSum",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "inline/vec.ts",
							"line": 20,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 480,
							"name": "vecSum",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Add multiple vectors.\n\\n\nThe function can be called in two ways:\n`vec = vecSum([vec1, vec2, vec3])`\n`vec = vecSum(vec1, vec2, vec3)`\n\\n",
								"returns": "The result vector.\n"
							},
							"parameters": [
								{
									"id": 481,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 482,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"shortText": "A list of vectors or just multiple vectors."
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Txyz"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Txyz"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						578
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						491,
						528,
						544,
						483,
						487,
						523,
						503,
						518,
						538,
						533,
						573,
						556,
						568,
						508,
						560,
						564,
						550,
						513,
						497,
						479
					]
				}
			],
			"sources": [
				{
					"fileName": "inline/vec.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "InlineClass",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 81,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "new InlineClass",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 4,
									"name": "debug",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "InlineClass"
							}
						}
					]
				},
				{
					"id": 5,
					"name": "__debug__",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 58,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6,
					"name": "arithmetic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 60,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 1395,
						"name": "arithmeticClass"
					}
				},
				{
					"id": 7,
					"name": "colors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 1200,
						"name": "colorsClass"
					}
				},
				{
					"id": 8,
					"name": "common",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 62,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 1055,
						"name": "commonClass"
					}
				},
				{
					"id": 23,
					"name": "constants",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 77,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 25,
									"name": "PI",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "Math.PI"
								},
								{
									"id": 36,
									"name": "RX",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TRay"
									},
									"defaultValue": "XRAY"
								},
								{
									"id": 37,
									"name": "RY",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TRay"
									},
									"defaultValue": "YRAY"
								},
								{
									"id": 38,
									"name": "RZ",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TRay"
									},
									"defaultValue": "ZRAY"
								},
								{
									"id": 35,
									"name": "VO",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Txyz"
									},
									"defaultValue": "OVEC"
								},
								{
									"id": 32,
									"name": "VX",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Txyz"
									},
									"defaultValue": "XVEC"
								},
								{
									"id": 33,
									"name": "VY",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Txyz"
									},
									"defaultValue": "YVEC"
								},
								{
									"id": 34,
									"name": "VZ",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Txyz"
									},
									"defaultValue": "ZVEC"
								},
								{
									"id": 26,
									"name": "XY",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TPlane"
									},
									"defaultValue": "XYPLANE"
								},
								{
									"id": 31,
									"name": "XZ",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TPlane"
									},
									"defaultValue": "XZPLANE"
								},
								{
									"id": 29,
									"name": "YX",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TPlane"
									},
									"defaultValue": "YXPLANE"
								},
								{
									"id": 27,
									"name": "YZ",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TPlane"
									},
									"defaultValue": "YZPLANE"
								},
								{
									"id": 28,
									"name": "ZX",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TPlane"
									},
									"defaultValue": "ZXPLANE"
								},
								{
									"id": 30,
									"name": "ZY",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "TPlane"
									},
									"defaultValue": "ZYPLANE"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										25,
										36,
										37,
										38,
										35,
										32,
										33,
										34,
										26,
										31,
										29,
										27,
										28,
										30
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 9,
					"name": "conversion",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 63,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 1252,
						"name": "conversionClass"
					}
				},
				{
					"id": 10,
					"name": "dict",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 64,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 1108,
						"name": "dictClass"
					}
				},
				{
					"id": 11,
					"name": "geometry",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 864,
						"name": "geometryClass"
					}
				},
				{
					"id": 12,
					"name": "list",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 66,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 972,
						"name": "listClass"
					}
				},
				{
					"id": 15,
					"name": "plane",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 69,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 795,
						"name": "planeClass"
					}
				},
				{
					"id": 16,
					"name": "rand",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 70,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 458,
						"name": "randClass"
					}
				},
				{
					"id": 17,
					"name": "ray",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 71,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 708,
						"name": "rayClass"
					}
				},
				{
					"id": 18,
					"name": "set",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 72,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 1162,
						"name": "setClass"
					}
				},
				{
					"id": 14,
					"name": "statistics",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 68,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 169,
						"name": "statisticsClass"
					}
				},
				{
					"id": 19,
					"name": "strs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 73,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 388,
						"name": "strsClass"
					}
				},
				{
					"id": 13,
					"name": "trigonometry",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 67,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 92,
						"name": "trigonometryClass"
					}
				},
				{
					"id": 20,
					"name": "types",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 74,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 269,
						"name": "typesClass"
					}
				},
				{
					"id": 21,
					"name": "util",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 75,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 1298,
						"name": "utilClass"
					}
				},
				{
					"id": 22,
					"name": "vec",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 76,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 578,
						"name": "vecClass"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						5,
						6,
						7,
						8,
						23,
						9,
						10,
						11,
						12,
						15,
						16,
						17,
						18,
						14,
						19,
						13,
						20,
						21,
						22
					]
				}
			],
			"sources": [
				{
					"fileName": "index.ts",
					"line": 57,
					"character": 13
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"kind": 4,
			"children": [
				1303,
				1182,
				1041,
				1282,
				1219,
				1070,
				836,
				891,
				749,
				439,
				662,
				1142,
				136,
				329,
				39,
				198,
				1297,
				478
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				1
			]
		}
	],
	"sources": [
		{
			"fileName": "index.ts",
			"line": 1,
			"character": 0
		}
	]
}